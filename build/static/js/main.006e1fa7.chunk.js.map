{"version":3,"sources":["components/Header/index.tsx","store/context.ts","components/List/index.tsx","components/AddRoundModal/index.tsx","components/DetailsModal/index.tsx","components/Session/index.tsx","components/TopBar/index.tsx","components/App/index.tsx","serviceWorker.js","index.tsx"],"names":["Header","className","React","createContext","users","rounds","roundUserInfo","showSession","setUsers","setRounds","setRoundUserInfo","setShowSession","List","list","context","useContext","AppContext","columns","title","key","render","text","record","index","playerId","user","find","item","get","getUserName","player","dataIndex","dataSource","AddRoundModal","isModify","roundIndex","visible","onOk","onCancel","useState","roundNO","length","setList","dateTime","setDateTime","leverage","setLeverage","userAmount","setUserAmount","handleDateTimeChange","v","format","handleLeverageChange","useEffect","round","amount","forEach","r","AV","Object","createWithoutData","set","allRoundUserInfos","keys","userId","findUser","info","extend","push","Promise","all","save","saveAll","then","RoundUserInfo","width","ellipsis","style","onChange","value","moment","concat","map","tmp","handleAmountChange","pagination","scroll","x","DetailsModal","onModify","ret","getUserRoundInfo","User","current","onClick","handleModifyClick","getTableColumns","Session","confirmLoading","setConfirmLoading","mobile","setMobile","verifyCode","setVerifyCode","verifyCount","setVerifyCount","inviteCode","setInviteCodeChange","countDown","setTimeout","MD5","toString","message","error","signUpOrlogInWithMobilePhone","placeholder","e","target","disabled","Cloud","requestSmsCode","startCount","TopBar","currentUser","getUsername","Modal","confirm","logOut","window","location","reload","App","setState","calcList","isShow","state","showModal","addLoading","showDetailsModal","modifyIndex","getUsers","Query","players","getAllRounds","res","getRoundInfo","roundInfos","query","equalTo","handleAddClick","handleDetailsClick","handleModalCancel","handleModalConfirm","handleDetailsConfirm","handleDetailsCancel","handleModify","this","lastRound","currentLeverage","userRoundInfo","max","min","total","totalBalance","count","Big","plus","valueOf","times","_","values","sort","a","b","Provider","type","Component","Boolean","hostname","match","init","appId","appKey","serverURL","ReactDOM","StrictMode","locale","zhCN","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.006e1fa7.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header() {\n  return (\n    <div className=\"app-header\">\n      <h1>一壶科技德州大赛排行榜</h1>\n    </div>\n  );\n}\n","import React from 'react';\nimport AV from 'leancloud-storage';\n\nexport interface ContextType {\n  users: AV.Object[],\n  rounds: AV.Object[],\n  roundUserInfo: AV.Object[][],\n  showSession: boolean,\n  setUsers: Function,\n  setRounds: Function,\n  setRoundUserInfo: Function,\n  setShowSession: Function,\n}\n\nexport const defaultContext: ContextType = {\n  users: [],\n  rounds: [],\n  roundUserInfo: [],\n  showSession: false,\n  setUsers: () => { },\n  setRounds: () => { },\n  setRoundUserInfo: () => { },\n  setShowSession: () => { },\n};\n\nexport default React.createContext(defaultContext);\n","import React, { useContext } from 'react';\nimport { Table } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\n\ninterface Props {\n  list: Array<ListItem>;\n}\n\nexport interface ListItem {\n  max: number;\n  min: number;\n  total: number;\n  totalBalance: number;\n  count: number;\n  player: AV.Object;\n  currentLeverage: number;\n}\n\nexport default function List({ list }: Props) {\n  const context = useContext(AppContext);\n  const columns = [\n    {\n      title: '排名',\n      key: 'rank',\n      render: (text: string, record: ListItem, index: number) => {\n        return index + 1;\n      },\n    },\n    {\n      title: '选手',\n      key: 'username',\n      render: (text: string, record: ListItem) => {\n        return getUserName(record.player.get('objectId'));\n      },\n    },\n    { title: '参赛次数', key: 'count', dataIndex: 'count' },\n    { title: '单次最大盈利', key: 'max', dataIndex: 'max' },\n    { title: '单次最大亏损', key: 'min', dataIndex: 'min' },\n    { title: '累计筹码盈亏', key: 'total', dataIndex: 'total' },\n    { title: '累计盈亏金额', key: 'totalBalance', dataIndex: 'totalBalance' },\n    { title: '当前赔率', key: 'currentLeverage', dataIndex: 'currentLeverage' },\n    { title: '操作', key: 'opt', dataIndex: 'opt' },\n  ];\n\n  function getUserName(playerId: string) {\n    let users: AV.Object[] = context.users;\n    let user = users.find((item: AV.Object) => item.get('objectId') === playerId);\n    if (user) {\n      return user.get('name');\n    }\n    return '';\n  }\n\n  return (\n    <div>\n      <Table dataSource={list} columns={columns} />\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Modal, InputNumber, DatePicker, Table } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\nimport moment from 'moment';\n\nexport interface Props {\n  isModify?: boolean;\n  roundIndex?: number;\n  onOk: Function;\n  visible: boolean;\n  onCancel: Function;\n}\n\ninterface AmountMap {\n  [key: string]: any;\n  [index: number]: any;\n}\n\nexport default function AddRoundModal({\n  isModify = false,\n  roundIndex = 0,\n  visible,\n  onOk,\n  onCancel,\n}: Props) {\n  const context = useContext(AppContext);\n  let { rounds, roundUserInfo } = context;\n  const [list, setList] = useState([{ roundNO: rounds.length + 1 }]);\n  const [dateTime, setDateTime] = useState('');\n  const [leverage, setLeverage] = useState(0.1);\n  const [userAmount, setUserAmount] = useState<AmountMap>({});\n\n  useEffect(() => {\n    if (isModify) {\n      let list: AV.Object[] = roundUserInfo[roundIndex];\n      let round: AV.Object = rounds[roundIndex];\n      let amount: AmountMap = {};\n      if (list) {\n        list.forEach((item: AV.Object) => {\n          amount[item.get('player').get('objectId')] = item.get('amount');\n        });\n      }\n      setList([{ roundNO: roundIndex + 1 }]);\n      setLeverage(round.get('leverage'));\n      setDateTime(round.get('dateTime'));\n      setUserAmount(amount);\n    }\n  }, [isModify, roundUserInfo, roundIndex, rounds]);\n\n  function handleOk() {\n    if (isModify) {\n      let round: AV.Object = context.rounds[roundIndex];\n      let roundUserInfo: AV.Object[] = context.roundUserInfo[roundIndex];\n      const r = AV.Object.createWithoutData('Round', round.get('objectId'));\n      r.set('dateTime', dateTime);\n      r.set('leverage', leverage);\n      let allRoundUserInfos: any[] = [];\n      Object.keys(userAmount).forEach((userId: string) => {\n        let info = roundUserInfo.find((item: AV.Object) => {\n          return item.get('player').get('objectId') === userId;\n        });\n        let findUser;\n        if (info) {\n          findUser = info;\n        } else {\n          const user = context.users.find(\n            (item: AV.Object) => item.get('objectId') === userId\n          );\n          const RoundUserInfo = AV.Object.extend('RoundUserInfo');\n          findUser = new RoundUserInfo();\n          findUser.set('round', r);\n          findUser.set('player', user);\n        }\n        findUser.set('amount', userAmount[userId]);\n        allRoundUserInfos.push(findUser);\n      });\n      Promise.all([r.save(), AV.Object.saveAll(allRoundUserInfos)]).then(() => {\n        if (onOk) {\n          onOk();\n        }\n      });\n    } else {\n      const Round = AV.Object.extend('Round');\n      const round = new Round();\n      round.set('dateTime', dateTime);\n      round.set('leverage', leverage);\n      const RoundUserInfo = AV.Object.extend('RoundUserInfo');\n      let allRoundUserInfos: AV.Object[] = [];\n      Object.keys(userAmount).forEach((userId) => {\n        const roundUserInfo = new RoundUserInfo();\n        const user = context.users.find(\n          (item: AV.Object) => item.get('objectId') === userId\n        );\n        roundUserInfo.set('round', round);\n        roundUserInfo.set('player', user);\n        roundUserInfo.set('amount', userAmount[userId]);\n        allRoundUserInfos.push(roundUserInfo);\n      });\n      AV.Object.saveAll(allRoundUserInfos).then(() => {\n        if (onOk) {\n          onOk();\n        }\n      });\n    }\n  }\n\n  function handleDateTimeChange(v: moment.Moment | null) {\n    if (v) {\n      setDateTime(v.format('YYYY/MM/DD'));\n    } else {\n      setDateTime('');\n    }\n  }\n\n  function handleLeverageChange(v: number | undefined) {\n    setLeverage(v || 0.1);\n  }\n\n  function handleAmountChange(v: number | undefined, user: AV.Object) {\n    v = v ? +v : 0;\n    let tmp = {\n      ...userAmount,\n    };\n    tmp[user.get('objectId')] = v;\n    setUserAmount(tmp);\n  }\n\n  function getTableColumns() {\n    let ret = [\n      { title: '场次', key: 'roundNO', dataIndex: 'roundNO', ellipsis: true },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: () => {\n          return (\n            <div style={{ width: '150px' }}>\n              <DatePicker\n                onChange={handleDateTimeChange}\n                format=\"YYYY/MM/DD\"\n                value={moment(dateTime, 'YYYY/MM/DD')}\n              />\n            </div>\n          );\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: () => {\n          return (\n            <InputNumber onChange={handleLeverageChange} value={leverage} />\n          );\n        },\n      },\n    ];\n    return ret.concat(\n      context.users.map((user: AV.Object) => {\n        return {\n          title: user.get('name'),\n          key: user.get('objectId'),\n          ellipsis: true,\n          render: () => {\n            return (\n              <InputNumber\n                onChange={(v) => handleAmountChange(v, user)}\n                value={userAmount[user.get('objectId')]}\n              />\n            );\n          },\n        };\n      })\n    );\n  }\n\n  function handleCancel() {\n    // setList([{ roundNO: 1 }]);\n    // setDateTime('');\n    // setLeverage(0.1);\n    // setUserAmount({});\n    onCancel();\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={handleCancel}\n      onOk={handleOk}\n      width={1200}\n    >\n      <div className=\"add-round-wrap\">\n        <Table\n          dataSource={list}\n          columns={getTableColumns()}\n          pagination={false}\n          scroll={{ x: true }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Modal, Table } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\n\ninterface Props {\n  onModify: OnModifyFunc;\n  visible: boolean;\n  onOk: EmptyFunc;\n  onCancel: EmptyFunc;\n}\n\ninterface OnModifyFunc {\n  (index: number): void;\n}\n\ninterface EmptyFunc {\n  (): void;\n}\n\nexport default function DetailsModal({\n  visible,\n  onModify,\n  onOk,\n  onCancel,\n}: Props) {\n  const context = useContext(AppContext);\n\n  function getTableColumns() {\n    let ret: object[] = [\n      {\n        title: '场次',\n        key: 'roundNO',\n        ellipsis: true,\n        render: (text: string, record: AV.Object, index: number) => {\n          return index + 1;\n        },\n      },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: (text: string, record: AV.Object) => {\n          return record.get('dateTime');\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: (text: string, record: AV.Object) => {\n          return record.get('leverage');\n        },\n      },\n    ];\n    let users: AV.Object[] = context.users;\n    ret = ret.concat(\n      users.map((user: AV.Object) => {\n        return {\n          title: user.get('name'),\n          key: user.get('objectId'),\n          ellipsis: true,\n          render: (text: string, record: AV.Object, index: number) => {\n            return getUserRoundInfo(user.get('objectId'), index);\n          },\n        };\n      })\n    );\n    const currentUser = AV.User.current();\n    if (currentUser) {\n      ret = ret.concat({\n        title: '操作',\n        key: 'opt',\n        render: (text: string, record: AV.Object, index: number) => {\n          return (\n            <div className=\"details-opt\">\n              <span onClick={() => handleModifyClick(index)}>修改</span>\n            </div>\n          );\n        },\n      });\n    }\n    return ret;\n  }\n\n  function handleModifyClick(index: number) {\n    onModify(index);\n  }\n\n  function getUserRoundInfo(userId: string, index: number) {\n    let { roundUserInfo } = context;\n    let list: AV.Object[] = roundUserInfo[index];\n    if (list) {\n      let info = list.find((item: AV.Object) => {\n        return item.get('player').get('objectId') === userId;\n      });\n      return (info && info.get('amount')) || '';\n    }\n    return '';\n  }\n\n  let rounds: AV.Object[] = context.rounds;\n  return (\n    <Modal visible={visible} onCancel={onCancel} onOk={onOk} width={1200}>\n      <div className=\"details-round-wrap\">\n        <Table\n          dataSource={rounds}\n          columns={getTableColumns()}\n          pagination={false}\n          scroll={{ x: true }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useState, ChangeEvent, useContext } from 'react';\nimport { Modal, Input, Button, message } from 'antd';\nimport './session.scss';\nimport AV from 'leancloud-storage';\nimport AppContext from '../../store/context';\nimport { MD5 } from 'crypto-js';\n\ninterface Props {\n  visible: boolean;\n}\n\nexport default function Session({ visible }: Props) {\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [mobile, setMobile] = useState('');\n  const [verifyCode, setVerifyCode] = useState('');\n  const [verifyCount, setVerifyCount] = useState(0);\n  const [inviteCode, setInviteCodeChange] = useState('');\n  const context = useContext(AppContext);\n\n  function handleOk() {\n    if (!mobile) {\n      return message.error('请输入手机号');\n    }\n    if (!verifyCode) {\n      return message.error('请输入验证码');\n    }\n    if (!inviteCode) {\n      return message.error('请输入邀请码');\n    }\n    if (MD5(inviteCode).toString() !== '41b9df4a217bb3c10b1c339358111b0d') {\n      return message.error('邀请码错误');\n    }\n    setConfirmLoading(true);\n    AV.User.signUpOrlogInWithMobilePhone(`+86${mobile}`, verifyCode).then(\n      (user) => {\n        setConfirmLoading(false);\n        context.setShowSession(false);\n      },\n      (error) => {\n        setConfirmLoading(false);\n        message.error(error.message);\n      }\n    );\n  }\n\n  function handleCancel() {\n    context.setShowSession(false);\n  }\n\n  function handleMobileChange(e: ChangeEvent<HTMLInputElement>) {\n    setMobile(e.target.value);\n  }\n\n  function handleVerifyCodeChange(e: ChangeEvent<HTMLInputElement>) {\n    setVerifyCode(e.target.value);\n  }\n\n  function getButtonText() {\n    if (verifyCount <= 0) {\n      return '获取验证码';\n    } else {\n      return `${verifyCount}s`;\n    }\n  }\n\n  function handleVerifyClick() {\n    if (verifyCount > 0 || !mobile) return;\n    AV.Cloud.requestSmsCode(`+86${mobile}`).then(() => {\n      setVerifyCount(60);\n      startCount();\n    });\n  }\n\n  function startCount() {\n    if (verifyCount > 0) return;\n    countDown();\n  }\n\n  function countDown() {\n    if (verifyCount <= 0) return;\n    setVerifyCount(verifyCount - 1);\n    setTimeout(countDown, 1000);\n  }\n\n  function handleInviteChange(e: ChangeEvent<HTMLInputElement>) {\n    setInviteCodeChange(e.target.value);\n  }\n\n  return (\n    <Modal\n      title=\"登录或注册\"\n      visible={visible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={confirmLoading}\n    >\n      <div className=\"session\">\n        <div className=\"form-row\">\n          <Input\n            placeholder=\"手机号码\"\n            value={mobile}\n            onChange={handleMobileChange}\n          />\n        </div>\n        <div className=\"form-row\">\n          <Input\n            placeholder=\"验证码\"\n            value={verifyCode}\n            onChange={handleVerifyCodeChange}\n          />\n          <Button disabled={verifyCount > 0} onClick={handleVerifyClick}>\n            {getButtonText()}\n          </Button>\n        </div>\n        <div className=\"form-row\">\n          <Input\n            placeholder=\"邀请码\"\n            value={inviteCode}\n            onChange={handleInviteChange}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useContext } from 'react';\nimport './top-bar.scss';\nimport Session from '../Session';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\nimport { Modal } from 'antd';\n\nexport default function TopBar() {\n  const context = useContext(AppContext);\n\n  function handleSigninClick() {\n    context.setShowSession(true);\n  }\n\n  function handleSignoutClick() {\n    Modal.confirm({\n      title: '确定退出登录吗？',\n      onOk() {\n        return AV.User.logOut().then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n\n  const currentUser = AV.User.current();\n\n  return (\n    <div className=\"top-bar\">\n      {!currentUser ? (\n        <span className=\"link-style\" onClick={handleSigninClick}>\n          登录\n        </span>\n      ) : (\n        [\n          <span>{currentUser.getUsername()}</span>,\n          <span className=\"link-style\" onClick={handleSignoutClick}>\n            退出登录\n          </span>,\n        ]\n      )}\n      <Session visible={context.showSession} />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Header from '../Header';\nimport List from '../List';\nimport './app.scss';\nimport 'antd/dist/antd.css';\nimport AppContext, { ContextType } from '../../store/context';\nimport AV from 'leancloud-storage';\nimport { Button } from 'antd';\nimport AddRoundModal from '../AddRoundModal';\nimport DetailsModal from '../DetailsModal';\nimport _ from 'lodash';\nimport Big from 'big.js';\nimport { ListItem } from '../List';\nimport TopBar from '../TopBar';\n\ninterface State extends ContextType {\n  list: [];\n\n  showModal: boolean;\n  addLoading: boolean;\n  showDetailsModal: boolean;\n\n  modifyIndex: number;\n  isModify: boolean;\n}\n\ninterface Map {\n  [key: string]: ListItem;\n}\n\nexport default class App extends Component {\n  setUsers = (list: AV.Queriable[]) => {\n    this.setState({\n      users: list,\n    });\n  };\n\n  setRounds = (list: AV.Queriable[]) => {\n    this.setState({\n      rounds: list,\n    });\n  };\n\n  setRoundUserInfo = (list: AV.Queriable[][]) => {\n    this.setState(\n      {\n        roundUserInfo: list,\n      },\n      this.calcList\n    );\n  };\n\n  setShowSession = (isShow?: boolean) => {\n    this.setState({\n      showSession: !!isShow,\n    });\n  };\n\n  state: State = {\n    users: [],\n    rounds: [],\n    roundUserInfo: [],\n    showSession: false,\n    setUsers: this.setUsers,\n    setRounds: this.setRounds,\n    setRoundUserInfo: this.setRoundUserInfo,\n    setShowSession: this.setShowSession,\n\n    list: [],\n\n    showModal: false,\n    addLoading: false,\n    showDetailsModal: false,\n\n    modifyIndex: -1,\n    isModify: false,\n  };\n  componentDidMount() {\n    this.getUsers();\n    this.getAllRounds();\n  }\n  getUsers = () => {\n    const query = new AV.Query('Player');\n    query.find().then((players: AV.Queriable[]) => {\n      this.setUsers(players);\n    });\n  };\n  getAllRounds = () => {\n    const rounds = new AV.Query('Round');\n    rounds.find().then((res) => {\n      Promise.all(\n        res.map((round) => {\n          return this.getRoundInfo(round);\n        })\n      ).then((roundInfos) => {\n        this.setRounds(res);\n        this.setRoundUserInfo(roundInfos);\n      });\n    });\n  };\n  getRoundInfo = (round: AV.Queriable) => {\n    const query = new AV.Query('RoundUserInfo');\n    query.equalTo('round', round);\n    return query.find();\n  };\n  handleAddClick = () => {\n    this.setState({\n      showModal: true,\n      isModify: false,\n    });\n  };\n  handleDetailsClick = () => {\n    this.setState({\n      showDetailsModal: true,\n    });\n  };\n  handleModalCancel = () => {\n    this.setState({\n      showModal: false,\n    });\n  };\n  handleModalConfirm = () => {\n    this.setState({\n      showModal: false,\n    });\n    this.getAllRounds();\n  };\n  handleDetailsConfirm = () => {\n    this.setState({\n      showDetailsModal: false,\n    });\n  };\n  handleDetailsCancel = () => {\n    this.setState({\n      showDetailsModal: false,\n    });\n  };\n  calcList() {\n    let { roundUserInfo, rounds } = this.state;\n    let tmp: Map = {};\n    let lastRound: AV.Object = rounds[rounds.length - 1];\n    let currentLeverage = 0;\n    if (lastRound) {\n      currentLeverage = lastRound.get('leverage');\n    }\n    roundUserInfo.forEach((round: AV.Object[], index) => {\n      let leverage = rounds[index].get('leverage');\n      round.forEach((info) => {\n        let player = info.get('player');\n        let amount = info.get('amount');\n        amount = +amount;\n        let playerId = player.get('objectId');\n        let userRoundInfo = tmp[playerId];\n        if (!userRoundInfo) {\n          userRoundInfo = {\n            max: 0,\n            min: 0,\n            total: 0,\n            totalBalance: 0,\n            count: 0,\n            player,\n            currentLeverage,\n          };\n        }\n        if (amount > userRoundInfo.max) {\n          userRoundInfo.max = amount;\n        }\n        if (amount < userRoundInfo.min) {\n          userRoundInfo.min = amount;\n        }\n        userRoundInfo.total = +new Big(userRoundInfo.total)\n          .plus(amount)\n          .valueOf();\n        userRoundInfo.totalBalance = +new Big(userRoundInfo.totalBalance)\n          .plus(new Big(amount).times(leverage))\n          .valueOf();\n        if (amount !== 0) {\n          userRoundInfo.count++;\n        }\n        tmp[playerId] = userRoundInfo;\n      });\n    });\n    let list = _.values(tmp);\n    list.sort((a: ListItem, b: ListItem) => {\n      return b.totalBalance - a.totalBalance;\n    });\n    this.setState({\n      list,\n    });\n  }\n  handleModify = (index: number) => {\n    this.setState({\n      modifyIndex: index,\n      isModify: true,\n      showDetailsModal: false,\n      showModal: true,\n    });\n  };\n  render() {\n    let {\n      users,\n      rounds,\n      roundUserInfo,\n      showSession,\n      setUsers,\n      setRounds,\n      setRoundUserInfo,\n      setShowSession,\n      list,\n    } = this.state;\n    const currentUser = AV.User.current();\n    return (\n      <div className=\"app\">\n        <AppContext.Provider\n          value={{\n            users,\n            rounds,\n            roundUserInfo,\n            showSession,\n            setUsers,\n            setRounds,\n            setRoundUserInfo,\n            setShowSession,\n          }}\n        >\n          <TopBar />\n          <Header />\n          <List list={list} />\n          <div className=\"btn-wrap\">\n            <Button type=\"primary\" onClick={this.handleDetailsClick}>\n              明细\n            </Button>\n            {currentUser ? (\n              <Button type=\"primary\" onClick={this.handleAddClick}>\n                增加记录\n              </Button>\n            ) : null}\n          </div>\n          <AddRoundModal\n            visible={this.state.showModal}\n            onOk={this.handleModalConfirm}\n            onCancel={this.handleModalCancel}\n            isModify={this.state.isModify}\n            roundIndex={this.state.modifyIndex}\n          ></AddRoundModal>\n          <DetailsModal\n            visible={this.state.showDetailsModal}\n            onOk={this.handleDetailsConfirm}\n            onCancel={this.handleDetailsCancel}\n            onModify={this.handleModify}\n          />\n        </AppContext.Provider>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport AV from 'leancloud-storage';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { ConfigProvider } from 'antd';\n\nAV.init({\n  appId: 'xfKlG0D6VO6MgwOUTzQ31f7W-gzGzoHsz',\n  appKey: 'k9TuwPqFQmsMqj3HYa83WCFs',\n  serverURL: 'https://xfklg0d6.lc-cn-n1-shared.com',\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider locale={zhCN}>\n      <App />\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}