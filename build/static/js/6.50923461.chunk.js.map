{"version":3,"sources":["components/List/index.tsx","components/List/mobile.tsx","components/AddRoundModal/index.tsx","components/DetailsModal/index.tsx","components/AddPlayerModal/index.tsx","pages/Home.tsx"],"names":["List","list","winTimes","columns","title","key","render","text","record","index","player","avatar","name","className","size","src","icon","UserOutlined","dataIndex","sorter","a","b","max","min","total","totalBalance","num","playNum","playerId","toFixed","getWinRate","id","dataSource","pagination","MobileList","this","props","map","data","winRate","renderList","Component","AddRoundModal","state","roundNO","roundIndex","rounds","length","dateTime","leverage","userAmount","handleOk","isModify","undefined","updateDatas","roundDetails","date","players","Object","keys","amount","updateRound","then","onOk","catch","e","message","error","datas","params","playerInfo","addRound","handleCancel","setState","onCancel","prevProps","modifyData","tmp","forEach","v","format","ellipsis","style","width","onChange","handleDateTimeChange","value","moment","handleLeverageChange","concat","handleAmountChange","visible","getTableColumns","scroll","x","connect","store","DetailsModal","getRoundDetails","setRoundDetails","setWinTimes","formatWinTimes","ret","getRoundInfo","onClick","handleModifyClick","onModify","p","find","info","mapDispatchToProps","AddPlayerModal","confirmLoading","playerName","getPlayers","setPlayers","addPlayer","handleNameChange","target","placeholder","Home","showAddModal","showDetailsModal","showAddPlayerModal","modifyIndex","isAuthenticated","type","isMobile","renderButtons","onAddDone"],"mappings":"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","file":"static/js/6.50923461.chunk.js","sourcesContent":["import React from 'react';\nimport { Table, Avatar } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { RankListData, Player, WinTimes } from '../../utils/types';\nimport './list.scss';\n\ninterface Props {\n  list: Array<RankListData>;\n  winTimes: WinTimes;\n}\n\nexport default function List({ list, winTimes }: Props) {\n  const columns = [\n    {\n      title: '排名',\n      key: 'rank',\n      render: (text: string, record: RankListData, index: number) => {\n        return index + 1;\n      },\n    },\n    {\n      title: '选手',\n      key: 'username',\n      render: (text: string, record: RankListData) => {\n        let player = record.player;\n        let avatar = player.avatar;\n        let name = player.name;\n        return (\n          <div className=\"player-wrap\">\n            <div className=\"avatar-wrap\">\n              {avatar ? (\n                <Avatar size={24} src={avatar} />\n              ) : (\n                <Avatar size={24} icon={<UserOutlined />} />\n              )}\n            </div>\n            {name}\n          </div>\n        );\n      },\n    },\n    { title: '参赛次数', key: 'playNum', dataIndex: 'playNum' },\n    {\n      title: '单次最大盈利',\n      key: 'max',\n      dataIndex: 'max',\n      sorter: (a: RankListData, b: RankListData) => a.max - b.max,\n    },\n    {\n      title: '单次最大亏损',\n      key: 'min',\n      dataIndex: 'min',\n      sorter: (a: RankListData, b: RankListData) => a.min - b.min,\n    },\n    {\n      title: '累计筹码盈亏',\n      key: 'total',\n      dataIndex: 'total',\n      sorter: (a: RankListData, b: RankListData) => a.total - b.total,\n    },\n    {\n      title: '累计盈亏金额',\n      key: 'totalBalance',\n      dataIndex: 'totalBalance',\n      sorter: (a: RankListData, b: RankListData) =>\n        a.totalBalance - b.totalBalance,\n    },\n    {\n      title: '胜率',\n      key: 'winRate',\n      render: (text: string, record: RankListData) => {\n        const player: Player = record.player;\n        const num = record.playNum;\n        return getWinRate(player.id, num);\n      },\n    },\n    { title: '当前赔率', key: 'currentLeverage', dataIndex: 'currentLeverage' },\n    { title: '操作', key: 'opt', dataIndex: 'opt' },\n  ];\n\n  function getWinRate(playerId: number, num: number) {\n    if (!winTimes[playerId] || !num) return 0;\n    return (winTimes[playerId] / num).toFixed(2);\n  }\n\n  return (\n    <div className=\"rank-wrap\">\n      <Table dataSource={list} columns={columns} pagination={false} />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { RankListData, WinTimes, Player } from '../../utils/types';\nimport './mobile-list.scss';\n\ninterface Props {\n  list: Array<RankListData>;\n  winTimes: WinTimes;\n}\n\nclass MobileList extends Component<Props> {\n  renderList() {\n    return this.props.list.map((data, index) => {\n      const player: Player = data.player;\n      const num = data.playNum;\n      const winRate = this.getWinRate(player.id, num);\n      return (\n        <div className=\"list-row\">\n          <div className=\"list-cell rank\">{index + 1}</div>\n          <div className=\"list-cell name\">{data.player.name}</div>\n          <div className=\"list-cell balance\">{data.totalBalance}</div>\n          <div className=\"list-cell win-rate\">{winRate}</div>\n        </div>\n      );\n    });\n  }\n\n  getWinRate(playerId: number, num: number) {\n    if (!this.props.winTimes[playerId] || !num) return 0;\n    return (this.props.winTimes[playerId] / num).toFixed(2);\n  }\n\n  render() {\n    return (\n      <div className=\"mobile-list\">\n        <div className=\"list-row list-header\">\n          <div className=\"list-cell header-cell rank\">排名</div>\n          <div className=\"list-cell header-cell name\">姓名</div>\n          <div className=\"list-cell header-cell balance\">盈亏</div>\n          <div className=\"list-cell header-cell win-rate\">胜率</div>\n        </div>\n        <div className=\"list-body\">\n          {this.renderList()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MobileList;\n","import React, { Component } from 'react';\nimport { Modal, InputNumber, DatePicker, Table, message } from 'antd';\nimport moment from 'moment';\nimport { Player, RoundDetails } from '../../utils/types';\nimport { addRound, updateRound } from '../../api/round';\nimport { connect } from 'react-redux';\nimport { StoreType } from '../../store/reducer';\n\nexport interface Props {\n  isModify?: boolean;\n  roundIndex?: number;\n  onOk: Function;\n  visible: boolean;\n  onCancel: Function;\n  rounds: [];\n  roundDetails: [RoundDetails];\n  players: [Player];\n}\n\ninterface AmountMap {\n  [key: string]: any;\n  [index: number]: any;\n}\n\nclass AddRoundModal extends Component<Props> {\n  state: AmountMap = {\n    list: [{ roundNO: this.props.roundIndex || this.props.rounds.length + 1 }],\n    dateTime: '',\n    leverage: 0.1,\n    userAmount: {},\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.isModify === this.props.isModify &&\n      prevProps.roundIndex === this.props.roundIndex\n    )\n      return;\n    if (this.props.isModify && this.props.roundIndex !== undefined) {\n      const modifyData = this.props.roundDetails[this.props.roundIndex];\n      const tmp: AmountMap = {};\n      modifyData.players.forEach((player) => {\n        tmp[player.playerId] = player.amount;\n      });\n      this.setState({\n        userAmount: tmp,\n        list: [{ roundNO: this.props.roundIndex + 1 }],\n        leverage: modifyData.leverage,\n        dateTime: modifyData.date,\n      });\n    }\n  }\n\n  handleOk = () => {\n    if (this.props.isModify && this.props.roundIndex !== undefined) {\n      const info = this.props.roundDetails[this.props.roundIndex];\n      const updateDatas = {\n        id: info.id,\n        date: this.state.dateTime,\n        leverage: this.state.leverage,\n        players: Object.keys(this.state.userAmount).map((playerId) => {\n          return {\n            amount: this.state.userAmount[playerId],\n            playerId,\n          };\n        }),\n      };\n      updateRound(updateDatas)\n        .then(() => {\n          if (this.props.onOk) {\n            this.props.onOk();\n          }\n        })\n        .catch((e) => {\n          message.error(e.message);\n        });\n    } else {\n      const datas = Object.keys(this.state.userAmount).map((playerId) => {\n        return {\n          id: playerId,\n          amount: this.state.userAmount[playerId],\n        };\n      });\n      const params = {\n        date: this.state.dateTime,\n        leverage: this.state.leverage,\n        playerInfo: datas,\n      };\n      addRound(params)\n        .then(() => {\n          if (this.props.onOk) {\n            this.props.onOk();\n          }\n        })\n        .catch((e) => {\n          message.error(e.message);\n        });\n    }\n  };\n\n  handleDateTimeChange(v: moment.Moment | null) {\n    if (v) {\n      this.setState({\n        dateTime: v.format('YYYY/MM/DD'),\n      });\n    } else {\n      this.setState({\n        dateTime: '',\n      });\n    }\n  }\n\n  handleLeverageChange(v: number | undefined) {\n    this.setState({\n      leverage: v || 0.1,\n    });\n  }\n\n  handleAmountChange(v: number | undefined, player: Player) {\n    v = v ? +v : 0;\n    let tmp = {\n      ...this.state.userAmount,\n    };\n    tmp[player.id] = v;\n    this.setState({\n      userAmount: tmp,\n    });\n  }\n\n  getTableColumns() {\n    let ret = [\n      { title: '场次', key: 'roundNO', dataIndex: 'roundNO', ellipsis: true },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: () => {\n          return (\n            <div style={{ width: '150px' }}>\n              <DatePicker\n                onChange={this.handleDateTimeChange}\n                format=\"YYYY/MM/DD\"\n                value={\n                  (this.state.dateTime &&\n                    moment(this.state.dateTime, 'YYYY/MM/DD')) ||\n                  undefined\n                }\n              />\n            </div>\n          );\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: () => {\n          return (\n            <InputNumber\n              onChange={this.handleLeverageChange}\n              value={this.state.leverage}\n            />\n          );\n        },\n      },\n    ];\n    return ret.concat(\n      this.props.players.map((player: Player) => {\n        return {\n          title: player.name,\n          key: `${player.id}`,\n          ellipsis: true,\n          render: () => {\n            return (\n              <InputNumber\n                onChange={(v) => this.handleAmountChange(v, player)}\n                value={this.state.userAmount[player.id]}\n              />\n            );\n          },\n        };\n      })\n    );\n  }\n\n  handleCancel = () => {\n    this.setState({\n      list: [\n        { roundNO: this.props.rounds.length + 1 },\n      ],\n      dateTime: '',\n      leverage: 0.1,\n      userAmount: {},\n    });\n    this.props.onCancel();\n  };\n\n  render() {\n    return (\n      <Modal\n        visible={this.props.visible}\n        onCancel={this.handleCancel}\n        onOk={this.handleOk}\n        width={1200}\n      >\n        <div className=\"add-round-wrap\">\n          <Table\n            dataSource={this.state.list}\n            columns={this.getTableColumns()}\n            pagination={false}\n            scroll={{ x: true }}\n          />\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (store: StoreType) => {\n  return {\n    rounds: store.rounds,\n    roundDetails: store.roundDetails,\n    players: store.players,\n  };\n};\n\nexport default connect(mapStateToProps)(AddRoundModal);\n","import React, { Component } from 'react';\nimport { Modal, Table } from 'antd';\nimport { RoundDetails, Player } from '../../utils/types';\nimport { getRoundDetails } from '../../api/round';\nimport { connect } from 'react-redux';\nimport { setRoundDetails, setWinTimes } from '../../store/action';\nimport { StoreType } from '../../store/reducer';\nimport formatWinTimes from '../../utils/win-times';\n\ninterface Props {\n  onModify: OnModifyFunc;\n  visible: boolean;\n  onOk: EmptyFunc;\n  onCancel: EmptyFunc;\n  setRoundDetails: Function;\n  setWinTimes: Function;\n  players: [Player];\n  roundDetails: [RoundDetails];\n}\n\ninterface OnModifyFunc {\n  (index: number): void;\n}\n\ninterface EmptyFunc {\n  (): void;\n}\n\nclass DetailsModal extends Component<Props> {\n  componentDidMount() {\n    this.getRoundDetails();\n  }\n\n  getRoundDetails = async () => {\n    const rounds: [RoundDetails] = await getRoundDetails();\n    this.props.setRoundDetails(rounds);\n    this.props.setWinTimes(formatWinTimes(rounds));\n  };\n\n  getTableColumns() {\n    let ret: object[] = [\n      {\n        title: '场次',\n        key: 'roundNO',\n        ellipsis: true,\n        render: (text: string, record: RoundDetails, index: number) => {\n          return index + 1;\n        },\n      },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: (text: string, record: RoundDetails) => {\n          return record.date;\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: (text: string, record: RoundDetails) => {\n          return record.leverage;\n        },\n      },\n    ];\n    let players = this.props.players;\n    ret = ret.concat(\n      players.map((player) => {\n        return {\n          title: player.name,\n          key: player.id,\n          ellipsis: true,\n          render: (text: string, record: RoundDetails, index: number) => {\n            return this.getRoundInfo(player.id, index);\n          },\n        };\n      })\n    );\n    const currentUser = true;\n    if (currentUser) {\n      ret = ret.concat({\n        title: '操作',\n        key: 'opt',\n        render: (text: string, record: RoundDetails, index: number) => {\n          return (\n            <div className=\"details-opt\">\n              <span onClick={() => this.handleModifyClick(index)}>修改</span>\n            </div>\n          );\n        },\n      });\n    }\n    return ret;\n  }\n\n  handleModifyClick(index: number) {\n    this.props.onModify(index);\n  }\n\n  getRoundInfo(playerId: number, index: number) {\n    const { players } = this.props.roundDetails[index];\n    const p = players.find((info) => info.playerId === playerId);\n    return (p && p.amount) || '';\n  }\n\n  render() {\n    return (\n      <Modal\n        visible={this.props.visible}\n        onCancel={this.props.onCancel}\n        onOk={this.props.onOk}\n        width={1200}\n      >\n        <div className=\"details-round-wrap\">\n          <Table\n            dataSource={this.props.roundDetails}\n            columns={this.getTableColumns()}\n            pagination={false}\n            scroll={{ x: true }}\n          />\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreType) => {\n  return {\n    roundDetails: state.roundDetails,\n    players: state.players,\n  };\n};\n\nconst mapDispatchToProps = {\n  setRoundDetails,\n  setWinTimes\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailsModal);\n","import React, { Component, ChangeEvent } from 'react';\nimport { Modal, Input, message } from 'antd';\nimport { addPlayer, getPlayers } from '../../api/player';\nimport { connect } from 'react-redux';\nimport { setPlayers } from '../../store/action';\n\ninterface Props {\n  visible: boolean;\n  onOk: Function;\n  onCancel: Function;\n  setPlayers: Function;\n}\n\nclass AddPlayerModal extends Component<Props> {\n  state = {\n    confirmLoading: false,\n    playerName: '',\n  };\n\n  getPlayers = async () => {\n    const players = await getPlayers();\n    this.props.setPlayers(players);\n  };\n\n  handleOk = () => {\n    if (!this.state.playerName) {\n      return message.error('请输入姓名');\n    }\n    this.setState({\n      confirmLoading: true,\n    });\n    addPlayer({\n      name: this.state.playerName,\n    })\n      .then(() => {\n        this.setState({\n          confirmLoading: false,\n        });\n        this.getPlayers();\n        if (this.props.onOk) {\n          this.props.onOk();\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          confirmLoading: false,\n        });\n        error && message.error(error.message);\n      });\n  };\n\n  handleCancel = () => {\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  handleNameChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      playerName: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <Modal\n        title=\"添加选手\"\n        visible={this.props.visible}\n        onOk={this.handleOk}\n        onCancel={this.handleCancel}\n        confirmLoading={this.state.confirmLoading}\n      >\n        <div className=\"session\">\n          <div className=\"form-row\">\n            <Input\n              placeholder=\"姓名\"\n              value={this.state.playerName}\n              onChange={this.handleNameChange}\n            />\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = {\n  setPlayers,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPlayerModal);\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport List from '../components/List';\nimport MobileList from '../components/List/mobile';\nimport AddRoundModal from '../components/AddRoundModal';\nimport DetailsModal from '../components/DetailsModal';\nimport AddPlayerModal from '../components/AddPlayerModal';\nimport { connect } from 'react-redux';\nimport { StoreType } from '../store/reducer';\nimport { WinTimes } from '../utils/types';\n\ninterface AddDoneFunc {\n  (): void;\n}\n\ninterface Props {\n  onAddDone: AddDoneFunc;\n  list: [];\n  winTimes: WinTimes;\n  isAuthenticated: boolean;\n  isMobile: boolean;\n}\n\nclass Home extends Component<Props> {\n  state = {\n    showAddModal: false,\n    isModify: false,\n    showDetailsModal: false,\n    showAddPlayerModal: false,\n    modifyIndex: -1,\n  };\n\n  renderButtons() {\n    if (!this.props.isAuthenticated) {\n      return;\n    } else {\n      return (\n        <div className=\"btn-wrap\">\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              this.setState({\n                showAddPlayerModal: true,\n              });\n            }}\n          >\n            添加选手\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              this.setState({\n                isModify: false,\n                showDetailsModal: true,\n              });\n            }}\n          >\n            明细\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              this.setState({\n                showAddModal: true,\n              });\n            }}\n          >\n            增加记录\n          </Button>\n        </div>\n      );\n    }\n  }\n\n  renderList() {\n    if (this.props.isMobile) {\n      return (\n        <MobileList list={this.props.list} winTimes={this.props.winTimes} />\n      );\n    } else {\n      return <List list={this.props.list} winTimes={this.props.winTimes} />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page home\">\n        {this.renderList()}\n        {this.renderButtons()}\n        <AddRoundModal\n          visible={this.state.showAddModal}\n          onOk={() => {\n            this.setState({\n              showAddModal: false,\n            });\n            this.props.onAddDone();\n          }}\n          onCancel={() => {\n            this.setState({\n              showAddModal: false,\n            });\n          }}\n          isModify={this.state.isModify}\n          roundIndex={this.state.modifyIndex}\n        ></AddRoundModal>\n        <DetailsModal\n          visible={this.state.showDetailsModal}\n          onOk={() => {\n            this.setState({\n              showDetailsModal: false,\n            });\n          }}\n          onCancel={() => {\n            this.setState({\n              showDetailsModal: false,\n            });\n          }}\n          onModify={(index) => {\n            this.setState({\n              modifyIndex: index,\n              isModify: true,\n              showDetailsModal: false,\n              showAddModal: true,\n            });\n          }}\n        />\n        <AddPlayerModal\n          visible={this.state.showAddPlayerModal}\n          onOk={() => {\n            this.setState({\n              showAddPlayerModal: false,\n            });\n          }}\n          onCancel={() => {\n            this.setState({\n              showAddPlayerModal: false,\n            });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreType) => {\n  return {\n    winTimes: state.winTimes,\n    isAuthenticated: state.isAuthenticated,\n    isMobile: state.isMobile,\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n"],"sourceRoot":""}