{"version":3,"sources":["components/List/index.tsx","components/AddRoundModal/index.tsx","components/DetailsModal/index.tsx","components/AddPlayerModal/index.tsx","pages/Home.tsx"],"names":["List","list","columns","useContext","AppContext","title","key","render","text","record","index","player","avatar","name","className","size","src","icon","UserOutlined","dataIndex","sorter","a","b","max","min","total","totalBalance","dataSource","pagination","AddRoundModal","isModify","roundIndex","visible","onOk","onCancel","context","rounds","useState","roundNO","length","setList","dateTime","setDateTime","leverage","setLeverage","userAmount","setUserAmount","handleDateTimeChange","v","format","handleLeverageChange","useEffect","info","roundDetails","amount","players","forEach","item","playerId","date","updateDatas","id","Object","keys","map","updateRound","then","catch","e","message","error","datas","params","playerInfo","addRound","width","ellipsis","style","onChange","value","moment","undefined","concat","tmp","handleAmountChange","scroll","x","DetailsModal","onModify","getRoundDetails","setRoundDetails","ret","p","find","getRoundInfo","onClick","handleModifyClick","getTableColumns","AddPlayerModal","confirmLoading","setConfirmLoading","setName","addPlayer","getPlayers","placeholder","target","Home","onAddDone","showAddModal","setShowAddModal","setIsModify","showDetailsModal","setShowDetailsModal","showAddPlayerModal","setShowAddPlayerModal","modifyIndex","setModifyIndex","type"],"mappings":"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","file":"static/js/5.168a599a.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { Table, Avatar } from 'antd';\nimport AppContext from '../../store/context';\nimport { UserOutlined } from '@ant-design/icons';\nimport { RankListData } from '../../utils/types';\nimport './list.scss';\n\ninterface Props {\n  list: Array<RankListData>;\n}\n\nexport default function List({ list }: Props) {\n  const context = useContext(AppContext);\n  const columns = [\n    {\n      title: '排名',\n      key: 'rank',\n      render: (text: string, record: RankListData, index: number) => {\n        return index + 1;\n      },\n    },\n    {\n      title: '选手',\n      key: 'username',\n      render: (text: string, record: RankListData) => {\n        let player = record.player;\n        let avatar = player.avatar;\n        let name = player.name;\n        return (\n          <div className=\"player-wrap\">\n            <div className=\"avatar-wrap\">\n              {avatar ? (\n                <Avatar size={24} src={avatar} />\n              ) : (\n                <Avatar size={24} icon={<UserOutlined />} />\n              )}\n            </div>\n            {name}\n          </div>\n        );\n      },\n    },\n    { title: '参赛次数', key: 'playNum', dataIndex: 'playNum' },\n    {\n      title: '单次最大盈利',\n      key: 'max',\n      dataIndex: 'max',\n      sorter: (a: RankListData, b: RankListData) => a.max - b.max,\n    },\n    {\n      title: '单次最大亏损',\n      key: 'min',\n      dataIndex: 'min',\n      sorter: (a: RankListData, b: RankListData) => a.min - b.min,\n    },\n    {\n      title: '累计筹码盈亏',\n      key: 'total',\n      dataIndex: 'total',\n      sorter: (a: RankListData, b: RankListData) => a.total - b.total,\n    },\n    {\n      title: '累计盈亏金额',\n      key: 'totalBalance',\n      dataIndex: 'totalBalance',\n      sorter: (a: RankListData, b: RankListData) => a.totalBalance - b.totalBalance,\n    },\n    { title: '当前赔率', key: 'currentLeverage', dataIndex: 'currentLeverage' },\n    { title: '操作', key: 'opt', dataIndex: 'opt' },\n  ];\n\n  return (\n    <div className=\"rank-wrap\">\n      <Table dataSource={list} columns={columns} pagination={false} />\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Modal, InputNumber, DatePicker, Table, message } from 'antd';\nimport AppContext from '../../store/context';\nimport moment from 'moment';\nimport { Player } from '../../utils/types';\nimport { addRound, updateRound } from '../../api/round';\n\nexport interface Props {\n  isModify?: boolean;\n  roundIndex?: number;\n  onOk: Function;\n  visible: boolean;\n  onCancel: Function;\n}\n\ninterface AmountMap {\n  [key: string]: any;\n  [index: number]: any;\n}\n\nexport default function AddRoundModal({\n  isModify = false,\n  roundIndex = 0,\n  visible,\n  onOk,\n  onCancel,\n}: Props) {\n  const context = useContext(AppContext);\n  let { rounds } = context;\n  const [list, setList] = useState([{ roundNO: rounds.length + 1 }]);\n  const [dateTime, setDateTime] = useState('');\n  const [leverage, setLeverage] = useState(0.1);\n  const [userAmount, setUserAmount] = useState<AmountMap>({});\n\n  useEffect(() => {\n    if (isModify) {\n      const info = context.roundDetails[roundIndex];\n      let amount: AmountMap = {};\n      if (info.players) {\n        info.players.forEach((item) => {\n          amount[item.playerId] = item.amount;\n        });\n      }\n      setList([{ roundNO: roundIndex + 1 }]);\n      setLeverage(info.leverage);\n      setDateTime(info.date);\n      setUserAmount(amount);\n    }\n  }, [isModify, roundIndex, rounds]);\n\n  function handleOk() {\n    if (isModify) {\n      const info = context.roundDetails[roundIndex];\n      const updateDatas = {\n        id: info.id,\n        date: dateTime,\n        leverage: leverage,\n        players: Object.keys(userAmount).map((playerId) => {\n          return {\n            amount: userAmount[playerId],\n            playerId,\n          };\n        }),\n      };\n      updateRound(updateDatas)\n        .then(() => {\n          if (onOk) {\n            onOk();\n          }\n        })\n        .catch((e) => {\n          message.error(e.message);\n        });\n    } else {\n      const datas = Object.keys(userAmount).map((playerId) => {\n        return {\n          id: playerId,\n          amount: userAmount[playerId],\n        };\n      });\n      const params = {\n        date: dateTime,\n        leverage,\n        playerInfo: datas,\n      };\n      addRound(params)\n        .then(() => {\n          if (onOk) {\n            onOk();\n          }\n        })\n        .catch((e) => {\n          message.error(e.message);\n        });\n    }\n  }\n\n  function handleDateTimeChange(v: moment.Moment | null) {\n    if (v) {\n      setDateTime(v.format('YYYY/MM/DD'));\n    } else {\n      setDateTime('');\n    }\n  }\n\n  function handleLeverageChange(v: number | undefined) {\n    setLeverage(v || 0.1);\n  }\n\n  function handleAmountChange(v: number | undefined, player: Player) {\n    v = v ? +v : 0;\n    let tmp = {\n      ...userAmount,\n    };\n    tmp[player.id] = v;\n    setUserAmount(tmp);\n  }\n\n  function getTableColumns() {\n    let ret = [\n      { title: '场次', key: 'roundNO', dataIndex: 'roundNO', ellipsis: true },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: () => {\n          return (\n            <div style={{ width: '150px' }}>\n              <DatePicker\n                onChange={handleDateTimeChange}\n                format=\"YYYY/MM/DD\"\n                value={\n                  (dateTime && moment(dateTime, 'YYYY/MM/DD')) || undefined\n                }\n              />\n            </div>\n          );\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: () => {\n          return (\n            <InputNumber onChange={handleLeverageChange} value={leverage} />\n          );\n        },\n      },\n    ];\n    return ret.concat(\n      context.players.map((player: Player) => {\n        return {\n          title: player.name,\n          key: `${player.id}`,\n          ellipsis: true,\n          render: () => {\n            return (\n              <InputNumber\n                onChange={(v) => handleAmountChange(v, player)}\n                value={userAmount[player.id]}\n              />\n            );\n          },\n        };\n      })\n    );\n  }\n\n  function handleCancel() {\n    // setList([{ roundNO: 1 }]);\n    // setDateTime('');\n    // setLeverage(0.1);\n    // setUserAmount({});\n    onCancel();\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={handleCancel}\n      onOk={handleOk}\n      width={1200}\n    >\n      <div className=\"add-round-wrap\">\n        <Table\n          dataSource={list}\n          columns={getTableColumns()}\n          pagination={false}\n          scroll={{ x: true }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Modal, Table } from 'antd';\nimport AppContext from '../../store/context';\nimport { RoundDetails } from '../../utils/types';\nimport { getRoundDetails } from '../../api/round';\n\ninterface Props {\n  onModify: OnModifyFunc;\n  visible: boolean;\n  onOk: EmptyFunc;\n  onCancel: EmptyFunc;\n}\n\ninterface OnModifyFunc {\n  (index: number): void;\n}\n\ninterface EmptyFunc {\n  (): void;\n}\n\nexport default function DetailsModal({\n  visible,\n  onModify,\n  onOk,\n  onCancel,\n}: Props) {\n  const context = useContext(AppContext);\n\n  useEffect(() => {\n    getRoundDetails().then((list) => {\n      context.setRoundDetails(list);\n    });\n  }, []);\n\n  function getTableColumns() {\n    let ret: object[] = [\n      {\n        title: '场次',\n        key: 'roundNO',\n        ellipsis: true,\n        render: (text: string, record: RoundDetails, index: number) => {\n          return index + 1;\n        },\n      },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: (text: string, record: RoundDetails) => {\n          return record.date;\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: (text: string, record: RoundDetails) => {\n          return record.leverage;\n        },\n      },\n    ];\n    let players = context.players;\n    ret = ret.concat(\n      players.map((player) => {\n        return {\n          title: player.name,\n          key: player.id,\n          ellipsis: true,\n          render: (text: string, record: RoundDetails, index: number) => {\n            return getRoundInfo(player.id, index);\n          },\n        };\n      })\n    );\n    const currentUser = true;\n    if (currentUser) {\n      ret = ret.concat({\n        title: '操作',\n        key: 'opt',\n        render: (text: string, record: RoundDetails, index: number) => {\n          return (\n            <div className=\"details-opt\">\n              <span onClick={() => handleModifyClick(index)}>修改</span>\n            </div>\n          );\n        },\n      });\n    }\n    return ret;\n  }\n\n  function handleModifyClick(index: number) {\n    onModify(index);\n  }\n\n  function getRoundInfo(playerId: number, index: number) {\n    const { players } = context.roundDetails[index];\n    const p = players.find((info) => info.playerId === playerId);\n    return (p && p.amount) || '';\n  }\n\n  return (\n    <Modal visible={visible} onCancel={onCancel} onOk={onOk} width={1200}>\n      <div className=\"details-round-wrap\">\n        <Table\n          dataSource={context.roundDetails}\n          columns={getTableColumns()}\n          pagination={false}\n          scroll={{ x: true }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useState, ChangeEvent, useContext } from 'react';\nimport { Modal, Input, message } from 'antd';\nimport { addPlayer } from '../../api/player';\nimport AppContext from '../../store/context';\n\ninterface Props {\n  visible: boolean;\n  onOk: Function;\n  onCancel: Function;\n}\n\nexport default function AddPlayerModal({ visible, onOk, onCancel }: Props) {\n  const context = useContext(AppContext);\n  \n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [name, setName] = useState('');\n\n  function handleOk() {\n    if (!name) {\n      return message.error('请输入姓名');\n    }\n    setConfirmLoading(true);\n    addPlayer({\n      name,\n    })\n      .then(() => {\n        setConfirmLoading(false);\n        context.getPlayers();\n        if (onOk) {\n          onOk();\n        }\n      })\n      .catch((error) => {\n        setConfirmLoading(false);\n        error && message.error(error.message);\n      });\n  }\n\n  function handleCancel() {\n    if (onCancel) {\n      onCancel();\n    }\n  }\n\n  function handleNameChange(e: ChangeEvent<HTMLInputElement>) {\n    setName(e.target.value);\n  }\n\n  return (\n    <Modal\n      title=\"添加选手\"\n      visible={visible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={confirmLoading}\n    >\n      <div className=\"session\">\n        <div className=\"form-row\">\n          <Input placeholder=\"姓名\" value={name} onChange={handleNameChange} />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport List from '../components/List';\nimport AddRoundModal from '../components/AddRoundModal';\nimport DetailsModal from '../components/DetailsModal';\nimport AddPlayerModal from '../components/AddPlayerModal';\n\ninterface AddDoneFunc {\n  (): void;\n}\n\ninterface Props {\n  onAddDone: AddDoneFunc;\n  list: [];\n}\n\nexport default function Home({ onAddDone, list }: Props) {\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [isModify, setIsModify] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [showAddPlayerModal, setShowAddPlayerModal] = useState(false);\n  const [modifyIndex, setModifyIndex] = useState(-1);\n\n  const currentUser = false;\n  return (\n    <div className=\"page home\">\n      <List list={list} />\n      <div className=\"btn-wrap\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setShowAddPlayerModal(true);\n          }}\n        >\n          添加选手\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setIsModify(false);\n            setShowDetailsModal(true);\n          }}\n        >\n          明细\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setShowAddModal(true);\n          }}\n        >\n          增加记录\n        </Button>\n      </div>\n      <AddRoundModal\n        visible={showAddModal}\n        onOk={() => {\n          setShowAddModal(false);\n          onAddDone();\n        }}\n        onCancel={() => {\n          setShowAddModal(false);\n        }}\n        isModify={isModify}\n        roundIndex={modifyIndex}\n      ></AddRoundModal>\n      <DetailsModal\n        visible={showDetailsModal}\n        onOk={() => {\n          setShowDetailsModal(false);\n        }}\n        onCancel={() => {\n          setShowDetailsModal(false);\n        }}\n        onModify={(index) => {\n          setModifyIndex(index);\n          setIsModify(true);\n          setShowDetailsModal(false);\n          setShowAddModal(true);\n        }}\n      />\n      <AddPlayerModal\n        visible={showAddPlayerModal}\n        onOk={() => {\n          setShowAddPlayerModal(false);\n        }}\n        onCancel={() => {\n          setShowAddPlayerModal(false);\n        }}\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""}