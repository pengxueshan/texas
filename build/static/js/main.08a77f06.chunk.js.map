{"version":3,"sources":["store/context.ts","components/Session/index.tsx","components/TopBar/index.tsx","components/List/index.tsx","components/AddRoundModal/index.tsx","components/DetailsModal/index.tsx","pages/Home.tsx","pages/Photo/index.tsx","pages/Message/index.tsx","components/App/index.tsx","serviceWorker.js","index.tsx"],"names":["React","createContext","users","rounds","roundUserInfo","showSession","setUsers","setRounds","setRoundUserInfo","setShowSession","Session","visible","useState","confirmLoading","setConfirmLoading","mobile","setMobile","verifyCode","setVerifyCode","verifyCount","setVerifyCount","inviteCode","setInviteCodeChange","context","useContext","AppContext","countDown","setTimeout","title","onOk","MD5","toString","message","error","AV","User","signUpOrlogInWithMobilePhone","then","user","onCancel","className","placeholder","value","onChange","e","target","disabled","onClick","Cloud","requestSmsCode","startCount","TopBar","currentUser","current","to","key","getUsername","Modal","confirm","logOut","window","location","reload","List","list","columns","render","text","record","index","playerId","find","item","get","getUserName","player","dataIndex","sorter","a","b","max","min","total","totalBalance","dataSource","pagination","AddRoundModal","isModify","roundIndex","roundNO","length","setList","dateTime","setDateTime","leverage","setLeverage","userAmount","setUserAmount","handleDateTimeChange","v","format","handleLeverageChange","useEffect","round","amount","forEach","r","Object","createWithoutData","set","allRoundUserInfos","keys","userId","findUser","info","extend","push","Promise","all","save","saveAll","catch","RoundUserInfo","width","ellipsis","style","moment","concat","map","tmp","handleAmountChange","scroll","x","DetailsModal","onModify","ret","getUserRoundInfo","handleModifyClick","getTableColumns","Home","onAddDone","showAddModal","setShowAddModal","setIsModify","showDetailsModal","setShowDetailsModal","modifyIndex","setModifyIndex","type","Photo","pics","setPics","isLoading","setIsLoading","getPics","query","Query","limit","skip","gamePics","beforeUpload","file","files","f","avFile","File","name","metaData","pic","keepFileName","success","showUploadList","multiple","gamePic","src","alt","IM","state","messageList","isJoining","client","room","scrollRef","createRef","handleTextMessageChange","setState","handleTextMessageEnterChange","currentTarget","handleSend","m","TextMessage","setAttributes","senderName","send","updateMessageList","this","Realtime","appId","appKey","server","createIMClient","getQuery","equalTo","conversations","createRoom","joinRoom","listenMessage","console","createChatRoom","loadLocalMessages","messages","localStorage","getItem","JSON","parse","join","on","Event","INVITED","payload","conversation","MESSAGE","setItem","stringify","slice","scrollTo","scrollHeight","attributes","tip","ref","id","getSenderName","timestamp","onPressEnter","size","Component","App","calcList","isShow","getUsers","players","getAllRounds","res","getRoundInfo","roundInfos","handleAddDone","userRoundInfo","count","currentLeverage","Big","plus","valueOf","times","_","values","sort","Provider","path","Boolean","hostname","match","init","serverURL","ReactDOM","StrictMode","locale","zhCN","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08a77f06.chunk.js","sourcesContent":["import React from 'react';\nimport AV from 'leancloud-storage';\n\nexport interface ContextType {\n  users: AV.Object[],\n  rounds: AV.Object[],\n  roundUserInfo: AV.Object[][],\n  showSession: boolean,\n  setUsers: Function,\n  setRounds: Function,\n  setRoundUserInfo: Function,\n  setShowSession: Function,\n}\n\nexport const defaultContext: ContextType = {\n  users: [],\n  rounds: [],\n  roundUserInfo: [],\n  showSession: false,\n  setUsers: () => { },\n  setRounds: () => { },\n  setRoundUserInfo: () => { },\n  setShowSession: () => { },\n};\n\nexport default React.createContext(defaultContext);\n","import React, { useState, ChangeEvent, useContext } from 'react';\nimport { Modal, Input, Button, message } from 'antd';\nimport './session.scss';\nimport AV from 'leancloud-storage';\nimport AppContext from '../../store/context';\nimport { MD5 } from 'crypto-js';\n\ninterface Props {\n  visible: boolean;\n}\n\nexport default function Session({ visible }: Props) {\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [mobile, setMobile] = useState('');\n  const [verifyCode, setVerifyCode] = useState('');\n  const [verifyCount, setVerifyCount] = useState(0);\n  const [inviteCode, setInviteCodeChange] = useState('');\n  const context = useContext(AppContext);\n\n  function handleOk() {\n    if (!mobile) {\n      return message.error('请输入手机号');\n    }\n    if (!verifyCode) {\n      return message.error('请输入验证码');\n    }\n    if (!inviteCode) {\n      return message.error('请输入邀请码');\n    }\n    if (MD5(inviteCode).toString() !== '41b9df4a217bb3c10b1c339358111b0d') {\n      return message.error('邀请码错误');\n    }\n    setConfirmLoading(true);\n    AV.User.signUpOrlogInWithMobilePhone(`+86${mobile}`, verifyCode).then(\n      (user) => {\n        setConfirmLoading(false);\n        context.setShowSession(false);\n      },\n      (error) => {\n        setConfirmLoading(false);\n        message.error(error.message);\n      }\n    );\n  }\n\n  function handleCancel() {\n    context.setShowSession(false);\n  }\n\n  function handleMobileChange(e: ChangeEvent<HTMLInputElement>) {\n    setMobile(e.target.value);\n  }\n\n  function handleVerifyCodeChange(e: ChangeEvent<HTMLInputElement>) {\n    setVerifyCode(e.target.value);\n  }\n\n  function getButtonText() {\n    if (verifyCount <= 0) {\n      return '获取验证码';\n    } else {\n      return `${verifyCount}s`;\n    }\n  }\n\n  function handleVerifyClick() {\n    if (verifyCount > 0 || !mobile) return;\n    AV.Cloud.requestSmsCode(`+86${mobile}`).then(() => {\n      setVerifyCount(60);\n      startCount();\n    });\n  }\n\n  function startCount() {\n    if (verifyCount > 0) return;\n    countDown();\n  }\n\n  function countDown() {\n    if (verifyCount <= 0) return;\n    setVerifyCount(verifyCount - 1);\n    setTimeout(countDown, 1000);\n  }\n\n  function handleInviteChange(e: ChangeEvent<HTMLInputElement>) {\n    setInviteCodeChange(e.target.value);\n  }\n\n  return (\n    <Modal\n      title=\"登录或注册\"\n      visible={visible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={confirmLoading}\n    >\n      <div className=\"session\">\n        <div className=\"form-row\">\n          <Input\n            placeholder=\"手机号码\"\n            value={mobile}\n            onChange={handleMobileChange}\n          />\n        </div>\n        <div className=\"form-row\">\n          <Input\n            placeholder=\"验证码\"\n            value={verifyCode}\n            onChange={handleVerifyCodeChange}\n          />\n          <Button disabled={verifyCount > 0} onClick={handleVerifyClick}>\n            {getButtonText()}\n          </Button>\n        </div>\n        <div className=\"form-row\">\n          <Input\n            placeholder=\"邀请码\"\n            value={inviteCode}\n            onChange={handleInviteChange}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useContext } from 'react';\nimport './top-bar.scss';\nimport Session from '../Session';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\nimport { Modal } from 'antd';\nimport { Link } from 'react-router-dom';\n\nexport default function TopBar() {\n  const context = useContext(AppContext);\n\n  function handleSigninClick() {\n    context.setShowSession(true);\n  }\n\n  function handleSignoutClick() {\n    Modal.confirm({\n      title: '确定退出登录吗？',\n      onOk() {\n        return AV.User.logOut().then(() => {\n          window.location.reload();\n        });\n      },\n    });\n  }\n\n  const currentUser = AV.User.current();\n\n  return (\n    <div className=\"top-bar\">\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">排行榜</Link>\n          </li>\n          <li>\n            <Link to=\"/photo\">精彩瞬间</Link>\n          </li>\n          <li>\n            <Link to=\"/message\">聊天室</Link>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"user-section\">\n        {!currentUser ? (\n          <span className=\"link-style\" onClick={handleSigninClick}>\n            登录\n          </span>\n        ) : (\n          [\n            <span key=\"user-name\">{currentUser.getUsername()}</span>,\n            <span key=\"logout\" className=\"link-style\" onClick={handleSignoutClick}>\n              退出登录\n            </span>,\n          ]\n        )}\n        <Session visible={context.showSession} />\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Table } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\n\ninterface Props {\n  list: Array<ListItem>;\n}\n\nexport interface ListItem {\n  max: number;\n  min: number;\n  total: number;\n  totalBalance: number;\n  count: number;\n  player: AV.Object;\n  currentLeverage: number;\n}\n\nexport default function List({ list }: Props) {\n  const context = useContext(AppContext);\n  const columns = [\n    {\n      title: '排名',\n      key: 'rank',\n      render: (text: string, record: ListItem, index: number) => {\n        return index + 1;\n      },\n    },\n    {\n      title: '选手',\n      key: 'username',\n      render: (text: string, record: ListItem) => {\n        return getUserName(record.player.get('objectId'));\n      },\n    },\n    { title: '参赛次数', key: 'count', dataIndex: 'count' },\n    {\n      title: '单次最大盈利',\n      key: 'max',\n      dataIndex: 'max',\n      sorter: (a: ListItem, b: ListItem) => a.max - b.max,\n    },\n    {\n      title: '单次最大亏损',\n      key: 'min',\n      dataIndex: 'min',\n      sorter: (a: ListItem, b: ListItem) => a.min - b.min,\n    },\n    {\n      title: '累计筹码盈亏',\n      key: 'total',\n      dataIndex: 'total',\n      sorter: (a: ListItem, b: ListItem) => a.total - b.total,\n    },\n    {\n      title: '累计盈亏金额',\n      key: 'totalBalance',\n      dataIndex: 'totalBalance',\n      sorter: (a: ListItem, b: ListItem) => a.totalBalance - b.totalBalance,\n    },\n    { title: '当前赔率', key: 'currentLeverage', dataIndex: 'currentLeverage' },\n    { title: '操作', key: 'opt', dataIndex: 'opt' },\n  ];\n\n  function getUserName(playerId: string) {\n    let users: AV.Object[] = context.users;\n    let user = users.find(\n      (item: AV.Object) => item.get('objectId') === playerId\n    );\n    if (user) {\n      return user.get('name');\n    }\n    return '';\n  }\n\n  return (\n    <div>\n      <Table dataSource={list} columns={columns} pagination={false} />\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Modal, InputNumber, DatePicker, Table, message } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\nimport moment from 'moment';\n\nexport interface Props {\n  isModify?: boolean;\n  roundIndex?: number;\n  onOk: Function;\n  visible: boolean;\n  onCancel: Function;\n}\n\ninterface AmountMap {\n  [key: string]: any;\n  [index: number]: any;\n}\n\nexport default function AddRoundModal({\n  isModify = false,\n  roundIndex = 0,\n  visible,\n  onOk,\n  onCancel,\n}: Props) {\n  const context = useContext(AppContext);\n  let { rounds, roundUserInfo } = context;\n  const [list, setList] = useState([{ roundNO: rounds.length + 1 }]);\n  const [dateTime, setDateTime] = useState('');\n  const [leverage, setLeverage] = useState(0.1);\n  const [userAmount, setUserAmount] = useState<AmountMap>({});\n\n  useEffect(() => {\n    if (isModify) {\n      let list: AV.Object[] = roundUserInfo[roundIndex];\n      let round: AV.Object = rounds[roundIndex];\n      let amount: AmountMap = {};\n      if (list) {\n        list.forEach((item: AV.Object) => {\n          amount[item.get('player').get('objectId')] = item.get('amount');\n        });\n      }\n      setList([{ roundNO: roundIndex + 1 }]);\n      setLeverage(round.get('leverage'));\n      setDateTime(round.get('dateTime'));\n      setUserAmount(amount);\n    }\n  }, [isModify, roundUserInfo, roundIndex, rounds]);\n\n  function handleOk() {\n    if (isModify) {\n      let round: AV.Object = context.rounds[roundIndex];\n      let roundUserInfo: AV.Object[] = context.roundUserInfo[roundIndex];\n      const r = AV.Object.createWithoutData('Round', round.get('objectId'));\n      r.set('dateTime', dateTime);\n      r.set('leverage', leverage);\n      let allRoundUserInfos: any[] = [];\n      Object.keys(userAmount).forEach((userId: string) => {\n        let info = roundUserInfo.find((item: AV.Object) => {\n          return item.get('player').get('objectId') === userId;\n        });\n        let findUser;\n        if (info) {\n          findUser = info;\n        } else {\n          const user = context.users.find(\n            (item: AV.Object) => item.get('objectId') === userId\n          );\n          const RoundUserInfo = AV.Object.extend('RoundUserInfo');\n          findUser = new RoundUserInfo();\n          findUser.set('round', r);\n          findUser.set('player', user);\n        }\n        findUser.set('amount', userAmount[userId]);\n        allRoundUserInfos.push(findUser);\n      });\n      return Promise.all([r.save(), AV.Object.saveAll(allRoundUserInfos)]).then(() => {\n        if (onOk) {\n          onOk();\n        }\n      }).catch(e => {\n        message.error(e.message);\n      });\n    } else {\n      const Round = AV.Object.extend('Round');\n      const round = new Round();\n      round.set('dateTime', dateTime);\n      round.set('leverage', leverage);\n      const RoundUserInfo = AV.Object.extend('RoundUserInfo');\n      let allRoundUserInfos: AV.Object[] = [];\n      Object.keys(userAmount).forEach((userId) => {\n        const roundUserInfo = new RoundUserInfo();\n        const user = context.users.find(\n          (item: AV.Object) => item.get('objectId') === userId\n        );\n        roundUserInfo.set('round', round);\n        roundUserInfo.set('player', user);\n        roundUserInfo.set('amount', userAmount[userId]);\n        allRoundUserInfos.push(roundUserInfo);\n      });\n      return AV.Object.saveAll(allRoundUserInfos).then(() => {\n        if (onOk) {\n          onOk();\n        }\n      }).catch(e => {\n        message.error(e.message);\n      });\n    }\n  }\n\n  function handleDateTimeChange(v: moment.Moment | null) {\n    if (v) {\n      setDateTime(v.format('YYYY/MM/DD'));\n    } else {\n      setDateTime('');\n    }\n  }\n\n  function handleLeverageChange(v: number | undefined) {\n    setLeverage(v || 0.1);\n  }\n\n  function handleAmountChange(v: number | undefined, user: AV.Object) {\n    v = v ? +v : 0;\n    let tmp = {\n      ...userAmount,\n    };\n    tmp[user.get('objectId')] = v;\n    setUserAmount(tmp);\n  }\n\n  function getTableColumns() {\n    let ret = [\n      { title: '场次', key: 'roundNO', dataIndex: 'roundNO', ellipsis: true },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: () => {\n          return (\n            <div style={{ width: '150px' }}>\n              <DatePicker\n                onChange={handleDateTimeChange}\n                format=\"YYYY/MM/DD\"\n                value={moment(dateTime, 'YYYY/MM/DD')}\n              />\n            </div>\n          );\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: () => {\n          return (\n            <InputNumber onChange={handleLeverageChange} value={leverage} />\n          );\n        },\n      },\n    ];\n    return ret.concat(\n      context.users.map((user: AV.Object) => {\n        return {\n          title: user.get('name'),\n          key: user.get('objectId'),\n          ellipsis: true,\n          render: () => {\n            return (\n              <InputNumber\n                onChange={(v) => handleAmountChange(v, user)}\n                value={userAmount[user.get('objectId')]}\n              />\n            );\n          },\n        };\n      })\n    );\n  }\n\n  function handleCancel() {\n    // setList([{ roundNO: 1 }]);\n    // setDateTime('');\n    // setLeverage(0.1);\n    // setUserAmount({});\n    onCancel();\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={handleCancel}\n      onOk={handleOk}\n      width={1200}\n    >\n      <div className=\"add-round-wrap\">\n        <Table\n          dataSource={list}\n          columns={getTableColumns()}\n          pagination={false}\n          scroll={{ x: true }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Modal, Table } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\n\ninterface Props {\n  onModify: OnModifyFunc;\n  visible: boolean;\n  onOk: EmptyFunc;\n  onCancel: EmptyFunc;\n}\n\ninterface OnModifyFunc {\n  (index: number): void;\n}\n\ninterface EmptyFunc {\n  (): void;\n}\n\nexport default function DetailsModal({\n  visible,\n  onModify,\n  onOk,\n  onCancel,\n}: Props) {\n  const context = useContext(AppContext);\n\n  function getTableColumns() {\n    let ret: object[] = [\n      {\n        title: '场次',\n        key: 'roundNO',\n        ellipsis: true,\n        render: (text: string, record: AV.Object, index: number) => {\n          return index + 1;\n        },\n      },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: (text: string, record: AV.Object) => {\n          return record.get('dateTime');\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: (text: string, record: AV.Object) => {\n          return record.get('leverage');\n        },\n      },\n    ];\n    let users: AV.Object[] = context.users;\n    ret = ret.concat(\n      users.map((user: AV.Object) => {\n        return {\n          title: user.get('name'),\n          key: user.get('objectId'),\n          ellipsis: true,\n          render: (text: string, record: AV.Object, index: number) => {\n            return getUserRoundInfo(user.get('objectId'), index);\n          },\n        };\n      })\n    );\n    const currentUser = AV.User.current();\n    if (currentUser) {\n      ret = ret.concat({\n        title: '操作',\n        key: 'opt',\n        render: (text: string, record: AV.Object, index: number) => {\n          return (\n            <div className=\"details-opt\">\n              <span onClick={() => handleModifyClick(index)}>修改</span>\n            </div>\n          );\n        },\n      });\n    }\n    return ret;\n  }\n\n  function handleModifyClick(index: number) {\n    onModify(index);\n  }\n\n  function getUserRoundInfo(userId: string, index: number) {\n    let { roundUserInfo } = context;\n    let list: AV.Object[] = roundUserInfo[index];\n    if (list) {\n      let info = list.find((item: AV.Object) => {\n        return item.get('player').get('objectId') === userId;\n      });\n      return (info && info.get('amount')) || '';\n    }\n    return '';\n  }\n\n  let rounds: AV.Object[] = context.rounds;\n  return (\n    <Modal visible={visible} onCancel={onCancel} onOk={onOk} width={1200}>\n      <div className=\"details-round-wrap\">\n        <Table\n          dataSource={rounds}\n          columns={getTableColumns()}\n          pagination={false}\n          scroll={{ x: true }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport List from '../components/List';\nimport AddRoundModal from '../components/AddRoundModal';\nimport DetailsModal from '../components/DetailsModal';\nimport AV from 'leancloud-storage';\n\ninterface AddDoneFunc {\n  (): void;\n}\n\ninterface Props {\n  onAddDone: AddDoneFunc;\n  list: []\n}\n\nexport default function Home({ onAddDone, list }: Props) {\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [isModify, setIsModify] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [modifyIndex, setModifyIndex] = useState(-1);\n\n  const currentUser = AV.User.current();\n  return (\n    <div className=\"page home\">\n      <List list={list} />\n      <div className=\"btn-wrap\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setShowAddModal(true);\n          }}\n        >\n          明细\n        </Button>\n        {currentUser ? (\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setIsModify(false);\n              setShowDetailsModal(true);\n            }}\n          >\n            增加记录\n          </Button>\n        ) : null}\n      </div>\n      <AddRoundModal\n        visible={showAddModal}\n        onOk={() => {\n          setShowAddModal(false);\n          onAddDone();\n        }}\n        onCancel={() => {\n          setShowAddModal(false);\n        }}\n        isModify={isModify}\n        roundIndex={modifyIndex}\n      ></AddRoundModal>\n      <DetailsModal\n        visible={showDetailsModal}\n        onOk={() => {\n          setShowDetailsModal(false);\n        }}\n        onCancel={() => {\n          setShowDetailsModal(false);\n        }}\n        onModify={(index) => {\n          setModifyIndex(index);\n          setIsModify(true);\n          setShowDetailsModal(false);\n          setShowAddModal(true);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Upload, Button, message, Spin } from 'antd';\nimport AV from 'leancloud-storage';\nimport './photo.scss';\n\nexport default function Photo() {\n  const [pics, setPics] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getPics();\n  }, []);\n\n  function handleBeforeUpload(file: File, files: File[]): boolean {\n    files.forEach((f) => {\n      let avFile = new AV.File(f.name, f);\n      avFile.metaData('type', 0); // 0: game pic\n      const GamePic = AV.Object.extend('GamePic');\n      const pic = new GamePic();\n      pic.set('file', avFile);\n      pic.set('uploader', AV.User.current());\n      pic.save({ keepFileName: true }).then(() => {\n        message.success('上传成功');\n        getPics();\n      });\n    });\n    return false;\n  }\n\n  function getPics() {\n    const query = new AV.Query('GamePic');\n    query.limit(5);\n    query.skip(pics.length);\n    setIsLoading(true);\n    query.find().then((gamePics) => {\n      setPics(pics.concat(gamePics as []));\n      setIsLoading(false);\n    });\n  }\n\n  return (\n    <div className=\"page photo\">\n      <div className=\"upload-wrap\">\n        <Upload\n          beforeUpload={handleBeforeUpload}\n          showUploadList={false}\n          multiple={true}\n        >\n          <Button>上传图片</Button>\n        </Upload>\n      </div>\n      <div className=\"pics\">\n        {pics.map((gamePic: AV.Object) => {\n          return (\n            <img\n              key={gamePic.get('objectId')}\n              src={gamePic.get('file').get('url')}\n              alt=\"\"\n            />\n          );\n        })}\n      </div>\n      <div className=\"spin-wrap\">\n        {isLoading ? <Spin /> : <span className=\"link-style\" onClick={getPics}>加载更多</span>}\n      </div>\n    </div>\n  );\n}\n","import React, { ChangeEvent, KeyboardEvent, Component, createRef } from 'react';\nimport { Input, Button, Spin } from 'antd';\nimport AV from 'leancloud-storage';\nimport {\n  Realtime,\n  IMClient,\n  PresistentConversation,\n  Event,\n  TextMessage,\n  ChatRoom,\n} from 'leancloud-realtime';\nimport moment from 'moment';\nimport './message.scss';\n\nconst HISTORY_MESSAGES_KEY = 'texasMessages';\n\ninterface AttrMap extends Object {\n  [key: string]: any;\n}\n\ninterface State {\n  text: string;\n  messageList: TextMessage[];\n  isJoining: boolean;\n}\n\nexport default class IM extends Component {\n  state: State = {\n    text: '',\n    messageList: [],\n    isJoining: false,\n  };\n\n  private client: IMClient | null = null;\n  private room: ChatRoom | null = null;\n  private scrollRef = createRef<HTMLDivElement>();\n  private user = AV.User.current();\n\n  componentDidMount() {\n    if (this.user) {\n      new Realtime({\n        appId: 'xfKlG0D6VO6MgwOUTzQ31f7W-gzGzoHsz',\n        appKey: 'k9TuwPqFQmsMqj3HYa83WCFs',\n        server: 'https://xfklg0d6.lc-cn-n1-shared.com',\n      })\n        .createIMClient(this.user)\n        .then((client) => {\n          this.client = client;\n          var query = client.getQuery().equalTo('tr', true); // 聊天室对象\n          query\n            .find()\n            .then((conversations) => {\n              if (conversations.length < 1) {\n                this.createRoom();\n              } else {\n                this.joinRoom(conversations[0]);\n              }\n            })\n            .then(() => {\n              this.listenMessage();\n            })\n            .catch(console.error);\n        });\n    }\n  }\n\n  createRoom() {\n    if (this.client) {\n      this.client\n        .createChatRoom({ name: '深挖洞，广积粮，不称王' })\n        .then((r) => {\n          this.room = r;\n          this.setState({\n            isJoining: false,\n          });\n          this.loadLocalMessages();\n        });\n    }\n  }\n\n  loadLocalMessages() {\n    let messages = localStorage.getItem(HISTORY_MESSAGES_KEY);\n    if (messages) {\n      messages = JSON.parse(messages);\n      this.setState({\n        messageList: messages\n      });\n    }\n  }\n\n  joinRoom(r: PresistentConversation) {\n    r.join().then(() => {\n      this.room = r;\n      this.setState({\n        isJoining: false,\n      });\n      this.loadLocalMessages();\n    });\n  }\n\n  handleTextMessageChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      text: e.target.value,\n    });\n  };\n\n  handleTextMessageEnterChange = (e: KeyboardEvent<HTMLInputElement>) => {\n    this.setState({\n      text: e.currentTarget.value,\n    });\n    this.handleSend();\n  };\n\n  listenMessage() {\n    if (this.client) {\n      // 当前用户被添加至某个对话\n      this.client.on(Event.INVITED, (payload, conversation) => {\n        // console.log(payload.invitedBy, conversation.id);\n      });\n\n      // 当前用户收到了某一条消息，可以通过响应 Event.MESSAGE 这一事件来处理。\n      this.client.on(Event.MESSAGE, (message: TextMessage, conversation) => {\n        this.updateMessageList(message);\n      });\n    }\n  }\n\n  handleSend = () => {\n    if (!this.state.text) return;\n    const m = new TextMessage(this.state.text);\n    m.setAttributes({ senderName: this.user.getUsername() });\n    if (this.room) {\n      this.room.send(m);\n      this.updateMessageList(m);\n      this.setState({\n        text: '',\n      });\n    }\n  };\n\n  updateMessageList(m: TextMessage) {\n    this.setState(\n      {\n        messageList: this.state.messageList.concat(m),\n      },\n      () => {\n        localStorage.setItem(\n          HISTORY_MESSAGES_KEY,\n          JSON.stringify(this.state.messageList.slice(0, 100))\n        );\n      }\n    );\n    setTimeout(() => {\n      let current = this.scrollRef.current;\n      if (current) {\n        current.scrollTo(0, current.scrollHeight);\n      }\n    }, 100);\n  }\n\n  getSenderName(m: TextMessage) {\n    let attrs: AttrMap = m.attributes;\n    return attrs['senderName'];\n  }\n\n  render() {\n    if (!this.user) {\n      return (\n        <div className=\"message-wrap\">\n          <div>请先登录</div>\n        </div>\n      );\n    }\n\n    if (this.state.isJoining) {\n      return (\n        <div className=\"message-wrap\">\n          <Spin tip=\"正在加入聊天室...\"></Spin>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"message-wrap\">\n        <div className=\"messages\" ref={this.scrollRef}>\n          {this.state.messageList.map((m) => {\n            return (\n              <div className=\"message-item\" key={m.id}>\n                <div>\n                  <span className=\"username\">{this.getSenderName(m)}</span>\n                  <span className=\"message-time\">\n                    {moment(m.timestamp).format('YYYY/MM/DD HH:mm:ss')}\n                  </span>\n                </div>\n                <div className=\"message-content\">{m.text}</div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"send-wrap\">\n          <Input\n            value={this.state.text}\n            onChange={this.handleTextMessageChange}\n            onPressEnter={this.handleTextMessageEnterChange}\n          />\n          <Button size=\"large\" onClick={this.handleSend}>\n            发送\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Header from '../Header';\nimport './app.scss';\nimport 'antd/dist/antd.css';\nimport AppContext, { ContextType } from '../../store/context';\nimport AV from 'leancloud-storage';\nimport _ from 'lodash';\nimport Big from 'big.js';\nimport { ListItem } from '../List';\nimport TopBar from '../TopBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from '../../pages/Home';\nimport Photo from '../../pages/Photo';\nimport Message from '../../pages/Message';\n\ninterface State extends ContextType {\n  list: [];\n}\n\ninterface Map {\n  [key: string]: ListItem;\n}\n\nexport default class App extends Component {\n  setUsers = (list: AV.Queriable[]) => {\n    this.setState({\n      users: list,\n    });\n  };\n\n  setRounds = (list: AV.Queriable[]) => {\n    this.setState({\n      rounds: list,\n    });\n  };\n\n  setRoundUserInfo = (list: AV.Queriable[][]) => {\n    this.setState(\n      {\n        roundUserInfo: list,\n      },\n      this.calcList\n    );\n  };\n\n  setShowSession = (isShow?: boolean) => {\n    this.setState({\n      showSession: !!isShow,\n    });\n  };\n\n  state: State = {\n    users: [],\n    rounds: [],\n    roundUserInfo: [],\n    showSession: false,\n    setUsers: this.setUsers,\n    setRounds: this.setRounds,\n    setRoundUserInfo: this.setRoundUserInfo,\n    setShowSession: this.setShowSession,\n\n    list: [],\n  };\n\n  componentDidMount() {\n    this.getUsers();\n    this.getAllRounds();\n  }\n\n  getUsers = () => {\n    const query = new AV.Query('Player');\n    query.find().then((players: AV.Queriable[]) => {\n      this.setUsers(players);\n    });\n  };\n\n  getAllRounds = () => {\n    const rounds = new AV.Query('Round');\n    rounds.find().then((res) => {\n      Promise.all(\n        res.map((round) => {\n          return this.getRoundInfo(round);\n        })\n      ).then((roundInfos) => {\n        this.setRounds(res);\n        this.setRoundUserInfo(roundInfos);\n      });\n    });\n  };\n\n  getRoundInfo = (round: AV.Queriable) => {\n    const query = new AV.Query('RoundUserInfo');\n    query.equalTo('round', round);\n    return query.find();\n  };\n\n  handleAddDone = () => {\n    this.getAllRounds();\n  };\n\n  calcList() {\n    let { roundUserInfo, rounds } = this.state;\n    let tmp: Map = {};\n    roundUserInfo.forEach((round: AV.Object[], index) => {\n      let leverage = rounds[index].get('leverage');\n      round.forEach((info) => {\n        let player = info.get('player');\n        let amount = info.get('amount');\n        amount = +amount;\n        let playerId = player.get('objectId');\n        let userRoundInfo = tmp[playerId];\n        if (!userRoundInfo) {\n          userRoundInfo = {\n            max: 0,\n            min: 0,\n            total: 0,\n            totalBalance: 0,\n            count: 0,\n            player,\n            currentLeverage: 0,\n          };\n        }\n        if (amount > userRoundInfo.max) {\n          userRoundInfo.max = amount;\n        }\n        if (amount < userRoundInfo.min) {\n          userRoundInfo.min = amount;\n        }\n        userRoundInfo.total = +new Big(userRoundInfo.total)\n          .plus(amount)\n          .valueOf();\n        userRoundInfo.totalBalance = +new Big(userRoundInfo.totalBalance)\n          .plus(new Big(amount).times(leverage))\n          .valueOf();\n        if (amount !== 0) {\n          userRoundInfo.count++;\n        }\n        tmp[playerId] = userRoundInfo;\n      });\n    });\n    let list = _.values(tmp);\n    list.sort((a: ListItem, b: ListItem) => {\n      return b.totalBalance - a.totalBalance;\n    });\n    this.setState({\n      list,\n    });\n  }\n\n  render() {\n    let {\n      users,\n      rounds,\n      roundUserInfo,\n      showSession,\n      setUsers,\n      setRounds,\n      setRoundUserInfo,\n      setShowSession,\n      list,\n    } = this.state;\n    return (\n      <div className=\"app\">\n        <AppContext.Provider\n          value={{\n            users,\n            rounds,\n            roundUserInfo,\n            showSession,\n            setUsers,\n            setRounds,\n            setRoundUserInfo,\n            setShowSession,\n          }}\n        >\n          <Router>\n            <TopBar />\n            {/* <Header /> */}\n            <Switch>\n              <Route path=\"/photo\">\n                <Photo />\n              </Route>\n              <Route path=\"/message\">\n                <Message />\n              </Route>\n              <Route path=\"/\">\n                <Home list={list} onAddDone={this.handleAddDone} />\n              </Route>\n            </Switch>\n          </Router>\n        </AppContext.Provider>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport AV from 'leancloud-storage';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { ConfigProvider } from 'antd';\n\nAV.init({\n  appId: 'xfKlG0D6VO6MgwOUTzQ31f7W-gzGzoHsz',\n  appKey: 'k9TuwPqFQmsMqj3HYa83WCFs',\n  serverURL: 'https://xfklg0d6.lc-cn-n1-shared.com',\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider locale={zhCN}>\n      <App />\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}