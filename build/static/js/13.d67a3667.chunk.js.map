{"version":3,"sources":["components/PrivateRoute/index.tsx"],"names":["PrivateRoute","children","rest","context","useContext","AppContext","render","location","isAuthenticated","to","pathname","state","from"],"mappings":"2LAQe,SAASA,EAAT,GAAqD,IAA7BC,EAA4B,EAA5BA,SAAaC,EAAe,4BAC3DC,EAAUC,qBAAWC,KAC3B,OACE,kBAAC,IAAD,iBACMH,EADN,CAEEI,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACNJ,EAAQK,gBACNP,EAEA,kBAAC,IAAD,CACEQ,GAAI,CACFC,SAAU,QACVC,MAAO,CAAEC,KAAML","file":"static/js/13.d67a3667.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport AppContext from '../../store/context';\n\ninterface Props extends RouteProps {\n  children: any;\n}\n\nexport default function PrivateRoute({ children, ...rest }: Props) {\n  const context = useContext(AppContext);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        context.isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/auth',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n"],"sourceRoot":""}