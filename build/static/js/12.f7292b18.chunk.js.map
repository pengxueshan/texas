{"version":3,"sources":["pages/Photo/index.tsx"],"names":["Photo","useState","pics","setPics","isLoading","setIsLoading","useEffect","getPics","user","AV","User","current","query","Query","limit","skip","length","find","then","gamePics","concat","className","beforeUpload","file","files","forEach","f","avFile","File","name","metaData","pic","Object","extend","set","save","keepFileName","message","success","showUploadList","multiple","map","gamePic","key","get","src","alt","onClick"],"mappings":"6PAKe,SAASA,IAAS,IAAD,EACNC,mBAAS,IADH,mBACvBC,EADuB,KACjBC,EADiB,OAEIF,oBAAS,GAFb,mBAEvBG,EAFuB,KAEZC,EAFY,KAI9BC,qBAAU,WACRC,MACC,IAEH,IAAMC,EAAOC,IAAGC,KAAKC,UAkBrB,SAASJ,IACP,IAAMK,EAAQ,IAAIH,IAAGI,MAAM,WAC3BD,EAAME,MAAM,GACZF,EAAMG,KAAKb,EAAKc,QAChBX,GAAa,GACbO,EAAMK,OAAOC,MAAK,SAACC,GACjBhB,EAAQD,EAAKkB,OAAOD,IACpBd,GAAa,MAIjB,OACE,yBAAKgB,UAAU,cACZb,EACC,yBAAKa,UAAU,eACb,kBAAC,IAAD,CACEC,aAhCV,SAA4BC,EAAYC,GAatC,OAZAA,EAAMC,SAAQ,SAACC,GACb,IAAIC,EAAS,IAAIlB,IAAGmB,KAAKF,EAAEG,KAAMH,GACjCC,EAAOG,SAAS,OAAQ,GACxB,IACMC,EAAM,IADItB,IAAGuB,OAAOC,OAAO,YAEjCF,EAAIG,IAAI,OAAQP,GAChBI,EAAIG,IAAI,WAAYzB,IAAGC,KAAKC,WAC5BoB,EAAII,KAAK,CAAEC,cAAc,IAAQlB,MAAK,WACpCmB,IAAQC,QAAQ,4BAChB/B,WAGG,GAoBCgC,gBAAgB,EAChBC,UAAU,GAEV,kBAAC,IAAD,mCAGF,KAEJ,yBAAKnB,UAAU,QACZnB,EAAKuC,KAAI,SAACC,GACT,OACE,yBACEC,IAAKD,EAAQE,IAAI,YACjBC,IAAKH,EAAQE,IAAI,QAAQA,IAAI,OAC7BE,IAAI,SAKZ,yBAAKzB,UAAU,aACZjB,EACC,kBAAC,IAAD,MAEA,0BAAMiB,UAAU,aAAa0B,QAASxC,GAAtC","file":"static/js/12.f7292b18.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Upload, Button, message, Spin } from 'antd';\nimport AV from 'leancloud-storage';\nimport './photo.scss';\n\nexport default function Photo() {\n  const [pics, setPics] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getPics();\n  }, []);\n\n  const user = AV.User.current();\n\n  function handleBeforeUpload(file: File, files: File[]): boolean {\n    files.forEach((f) => {\n      let avFile = new AV.File(f.name, f);\n      avFile.metaData('type', 0); // 0: game pic\n      const GamePic = AV.Object.extend('GamePic');\n      const pic = new GamePic();\n      pic.set('file', avFile);\n      pic.set('uploader', AV.User.current());\n      pic.save({ keepFileName: true }).then(() => {\n        message.success('上传成功');\n        getPics();\n      });\n    });\n    return false;\n  }\n\n  function getPics() {\n    const query = new AV.Query('GamePic');\n    query.limit(5);\n    query.skip(pics.length);\n    setIsLoading(true);\n    query.find().then((gamePics) => {\n      setPics(pics.concat(gamePics as []));\n      setIsLoading(false);\n    });\n  }\n\n  return (\n    <div className=\"page photo\">\n      {user ? (\n        <div className=\"upload-wrap\">\n          <Upload\n            beforeUpload={handleBeforeUpload}\n            showUploadList={false}\n            multiple={true}\n          >\n            <Button>上传图片</Button>\n          </Upload>\n        </div>\n      ) : null}\n\n      <div className=\"pics\">\n        {pics.map((gamePic: AV.Object) => {\n          return (\n            <img\n              key={gamePic.get('objectId')}\n              src={gamePic.get('file').get('url')}\n              alt=\"\"\n            />\n          );\n        })}\n      </div>\n      <div className=\"spin-wrap\">\n        {isLoading ? (\n          <Spin />\n        ) : (\n          <span className=\"link-style\" onClick={getPics}>\n            加载更多\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}