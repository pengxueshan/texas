{"version":3,"sources":["store/context.ts","components/Session/index.tsx","components/TopBar/index.tsx","components/List/index.tsx","components/AddRoundModal/index.tsx","components/DetailsModal/index.tsx","pages/Home.tsx","pages/Photo/index.tsx","pages/Message/index.tsx","pages/Profile/index.tsx","components/App/index.tsx","serviceWorker.js","index.tsx"],"names":["React","createContext","users","rounds","roundUserInfo","showSession","setUsers","setRounds","setRoundUserInfo","setShowSession","Session","visible","useState","confirmLoading","setConfirmLoading","mobile","setMobile","verifyCode","setVerifyCode","verifyCount","setVerifyCount","inviteCode","setInviteCodeChange","context","useContext","AppContext","countDown","setTimeout","title","onOk","MD5","toString","message","error","AV","User","signUpOrlogInWithMobilePhone","then","user","onCancel","className","placeholder","value","onChange","e","target","disabled","onClick","Cloud","requestSmsCode","startCount","TopBar","avatar","currentUser","current","get","to","size","src","icon","UserOutlined","key","Modal","confirm","logOut","window","location","reload","List","list","columns","render","text","record","index","playerId","player","find","item","name","dataIndex","sorter","a","b","max","min","total","totalBalance","dataSource","pagination","AddRoundModal","isModify","roundIndex","roundNO","length","setList","dateTime","setDateTime","leverage","setLeverage","userAmount","setUserAmount","handleDateTimeChange","v","format","handleLeverageChange","useEffect","round","amount","forEach","r","Object","createWithoutData","set","allRoundUserInfos","keys","userId","findUser","info","extend","push","Promise","all","save","saveAll","catch","RoundUserInfo","width","ellipsis","style","moment","concat","map","tmp","handleAmountChange","scroll","x","DetailsModal","onModify","ret","getUserRoundInfo","handleModifyClick","getTableColumns","Home","onAddDone","showAddModal","setShowAddModal","setIsModify","showDetailsModal","setShowDetailsModal","modifyIndex","setModifyIndex","type","Photo","pics","setPics","isLoading","setIsLoading","getPics","query","Query","limit","skip","gamePics","beforeUpload","file","files","f","avFile","File","metaData","pic","keepFileName","success","showUploadList","multiple","gamePic","alt","IM","state","messageList","isJoining","client","room","scrollRef","createRef","handleTextMessageChange","setState","handleTextMessageEnterChange","currentTarget","handleSend","m","TextMessage","setAttributes","senderName","getUsername","send","updateMessageList","this","Realtime","appId","appKey","server","createIMClient","getQuery","equalTo","conversations","createRoom","joinRoom","listenMessage","console","createChatRoom","loadLocalMessages","messages","localStorage","getItem","JSON","parse","join","on","Event","INVITED","payload","conversation","MESSAGE","setItem","stringify","slice","scrollTo","scrollHeight","attributes","tip","ref","id","getSenderName","timestamp","onPressEnter","Component","Profile","isEdit","relativePlayer","isSaving","handleEditClick","handleRelativePlayer","err","handlePlayerSelectChange","handleUploadAvatar","req","p","u","defaultSelect","defaultValue","Option","getRelativePlayer","EditOutlined","renderPlayer","renderAvatar","contextType","App","calcList","isShow","getUsers","players","getAllRounds","res","getRoundInfo","roundInfos","handleAddDone","userRoundInfo","count","currentLeverage","Big","plus","valueOf","times","_","values","sort","Provider","path","Boolean","hostname","match","init","serverURL","ReactDOM","StrictMode","locale","zhCN","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f16e4dfb.chunk.js","sourcesContent":["import React from 'react';\nimport AV from 'leancloud-storage';\n\nexport interface ContextType {\n  users: AV.Object[],\n  rounds: AV.Object[],\n  roundUserInfo: AV.Object[][],\n  showSession: boolean,\n  setUsers: Function,\n  setRounds: Function,\n  setRoundUserInfo: Function,\n  setShowSession: Function,\n}\n\nexport const defaultContext: ContextType = {\n  users: [],\n  rounds: [],\n  roundUserInfo: [],\n  showSession: false,\n  setUsers: () => { },\n  setRounds: () => { },\n  setRoundUserInfo: () => { },\n  setShowSession: () => { },\n};\n\nexport default React.createContext(defaultContext);\n","import React, { useState, ChangeEvent, useContext } from 'react';\nimport { Modal, Input, Button, message } from 'antd';\nimport './session.scss';\nimport AV from 'leancloud-storage';\nimport AppContext from '../../store/context';\nimport { MD5 } from 'crypto-js';\n\ninterface Props {\n  visible: boolean;\n}\n\nexport default function Session({ visible }: Props) {\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [mobile, setMobile] = useState('');\n  const [verifyCode, setVerifyCode] = useState('');\n  const [verifyCount, setVerifyCount] = useState(0);\n  const [inviteCode, setInviteCodeChange] = useState('');\n  const context = useContext(AppContext);\n\n  function handleOk() {\n    if (!mobile) {\n      return message.error('请输入手机号');\n    }\n    if (!verifyCode) {\n      return message.error('请输入验证码');\n    }\n    if (!inviteCode) {\n      return message.error('请输入邀请码');\n    }\n    if (MD5(inviteCode).toString() !== '41b9df4a217bb3c10b1c339358111b0d') {\n      return message.error('邀请码错误');\n    }\n    setConfirmLoading(true);\n    AV.User.signUpOrlogInWithMobilePhone(`+86${mobile}`, verifyCode).then(\n      (user) => {\n        setConfirmLoading(false);\n        context.setShowSession(false);\n      },\n      (error) => {\n        setConfirmLoading(false);\n        message.error(error.message);\n      }\n    );\n  }\n\n  function handleCancel() {\n    context.setShowSession(false);\n  }\n\n  function handleMobileChange(e: ChangeEvent<HTMLInputElement>) {\n    setMobile(e.target.value);\n  }\n\n  function handleVerifyCodeChange(e: ChangeEvent<HTMLInputElement>) {\n    setVerifyCode(e.target.value);\n  }\n\n  function getButtonText() {\n    if (verifyCount <= 0) {\n      return '获取验证码';\n    } else {\n      return `${verifyCount}s`;\n    }\n  }\n\n  function handleVerifyClick() {\n    if (verifyCount > 0 || !mobile) return;\n    AV.Cloud.requestSmsCode(`+86${mobile}`).then(() => {\n      setVerifyCount(60);\n      startCount();\n    });\n  }\n\n  function startCount() {\n    if (verifyCount > 0) return;\n    countDown();\n  }\n\n  function countDown() {\n    if (verifyCount <= 0) return;\n    setVerifyCount(verifyCount - 1);\n    setTimeout(countDown, 1000);\n  }\n\n  function handleInviteChange(e: ChangeEvent<HTMLInputElement>) {\n    setInviteCodeChange(e.target.value);\n  }\n\n  return (\n    <Modal\n      title=\"登录或注册\"\n      visible={visible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={confirmLoading}\n    >\n      <div className=\"session\">\n        <div className=\"form-row\">\n          <Input\n            placeholder=\"手机号码\"\n            value={mobile}\n            onChange={handleMobileChange}\n          />\n        </div>\n        <div className=\"form-row\">\n          <Input\n            placeholder=\"验证码\"\n            value={verifyCode}\n            onChange={handleVerifyCodeChange}\n          />\n          <Button disabled={verifyCount > 0} onClick={handleVerifyClick}>\n            {getButtonText()}\n          </Button>\n        </div>\n        <div className=\"form-row\">\n          <Input\n            placeholder=\"邀请码\"\n            value={inviteCode}\n            onChange={handleInviteChange}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useContext } from 'react';\nimport './top-bar.scss';\nimport Session from '../Session';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\nimport { Modal, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { UserOutlined } from '@ant-design/icons';\n\nexport default function TopBar() {\n  const context = useContext(AppContext);\n\n  function handleSigninClick() {\n    context.setShowSession(true);\n  }\n\n  function handleSignoutClick() {\n    Modal.confirm({\n      title: '确定退出登录吗？',\n      onOk() {\n        return AV.User.logOut().then(() => {\n          window.location.reload();\n        });\n      },\n    });\n  }\n\n  const currentUser = AV.User.current();\n  let avatar;\n  if (currentUser) {\n    avatar = currentUser.get('avatar');\n  }\n\n  return (\n    <div className=\"top-bar\">\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">排行榜</Link>\n          </li>\n          <li>\n            <Link to=\"/photo\">精彩瞬间</Link>\n          </li>\n          <li>\n            <Link to=\"/message\">聊天室</Link>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"user-section\">\n        {!currentUser ? (\n          <span className=\"link-style\" onClick={handleSigninClick}>\n            登录\n          </span>\n        ) : (\n          [\n            avatar ? (\n              <Avatar size={32} src={avatar.get('url')} />\n            ) : (\n              <Avatar size={32} icon={<UserOutlined />} />\n            ),\n            // <span key=\"user-name\">{currentUser.getUsername()}</span>,\n            <Link key=\"setting\" to=\"/profile\">\n              设置\n            </Link>,\n            <span\n              key=\"logout\"\n              className=\"link-style\"\n              onClick={handleSignoutClick}\n            >\n              退出登录\n            </span>,\n          ]\n        )}\n        <Session visible={context.showSession} />\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Table, Avatar } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\nimport { UserOutlined } from '@ant-design/icons';\nimport './list.scss';\n\ninterface Props {\n  list: Array<ListItem>;\n}\n\nexport interface ListItem {\n  max: number;\n  min: number;\n  total: number;\n  totalBalance: number;\n  count: number;\n  player: AV.Object;\n  currentLeverage: number;\n}\n\nexport default function List({ list }: Props) {\n  const context = useContext(AppContext);\n  const columns = [\n    {\n      title: '排名',\n      key: 'rank',\n      render: (text: string, record: ListItem, index: number) => {\n        return index + 1;\n      },\n    },\n    {\n      title: '选手',\n      key: 'username',\n      render: (text: string, record: ListItem) => {\n        let player = getPlayer(record.player.get('objectId'));\n        let avatar = player?.get('avatar');\n        let name = player?.get('name');\n        return (\n          <div className=\"player-wrap\">\n            <div className=\"avatar-wrap\">\n              {avatar ? (\n                <Avatar size={24} src={avatar.get('url')} />\n              ) : (\n                <Avatar size={24} icon={<UserOutlined />} />\n              )}\n            </div>\n            {name}\n          </div>\n        );\n      },\n    },\n    { title: '参赛次数', key: 'count', dataIndex: 'count' },\n    {\n      title: '单次最大盈利',\n      key: 'max',\n      dataIndex: 'max',\n      sorter: (a: ListItem, b: ListItem) => a.max - b.max,\n    },\n    {\n      title: '单次最大亏损',\n      key: 'min',\n      dataIndex: 'min',\n      sorter: (a: ListItem, b: ListItem) => a.min - b.min,\n    },\n    {\n      title: '累计筹码盈亏',\n      key: 'total',\n      dataIndex: 'total',\n      sorter: (a: ListItem, b: ListItem) => a.total - b.total,\n    },\n    {\n      title: '累计盈亏金额',\n      key: 'totalBalance',\n      dataIndex: 'totalBalance',\n      sorter: (a: ListItem, b: ListItem) => a.totalBalance - b.totalBalance,\n    },\n    { title: '当前赔率', key: 'currentLeverage', dataIndex: 'currentLeverage' },\n    { title: '操作', key: 'opt', dataIndex: 'opt' },\n  ];\n\n  function getPlayer(playerId: string) {\n    let users: AV.Object[] = context.users;\n    return users.find((item: AV.Object) => item.get('objectId') === playerId);\n  }\n\n  return (\n    <div className=\"rank-wrap\">\n      <Table dataSource={list} columns={columns} pagination={false} />\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Modal, InputNumber, DatePicker, Table, message } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\nimport moment from 'moment';\n\nexport interface Props {\n  isModify?: boolean;\n  roundIndex?: number;\n  onOk: Function;\n  visible: boolean;\n  onCancel: Function;\n}\n\ninterface AmountMap {\n  [key: string]: any;\n  [index: number]: any;\n}\n\nexport default function AddRoundModal({\n  isModify = false,\n  roundIndex = 0,\n  visible,\n  onOk,\n  onCancel,\n}: Props) {\n  const context = useContext(AppContext);\n  let { rounds, roundUserInfo } = context;\n  const [list, setList] = useState([{ roundNO: rounds.length + 1 }]);\n  const [dateTime, setDateTime] = useState('');\n  const [leverage, setLeverage] = useState(0.1);\n  const [userAmount, setUserAmount] = useState<AmountMap>({});\n\n  useEffect(() => {\n    if (isModify) {\n      let list: AV.Object[] = roundUserInfo[roundIndex];\n      let round: AV.Object = rounds[roundIndex];\n      let amount: AmountMap = {};\n      if (list) {\n        list.forEach((item: AV.Object) => {\n          amount[item.get('player').get('objectId')] = item.get('amount');\n        });\n      }\n      setList([{ roundNO: roundIndex + 1 }]);\n      setLeverage(round.get('leverage'));\n      setDateTime(round.get('dateTime'));\n      setUserAmount(amount);\n    }\n  }, [isModify, roundUserInfo, roundIndex, rounds]);\n\n  function handleOk() {\n    if (isModify) {\n      let round: AV.Object = context.rounds[roundIndex];\n      let roundUserInfo: AV.Object[] = context.roundUserInfo[roundIndex];\n      const r = AV.Object.createWithoutData('Round', round.get('objectId'));\n      r.set('dateTime', dateTime);\n      r.set('leverage', leverage);\n      let allRoundUserInfos: any[] = [];\n      Object.keys(userAmount).forEach((userId: string) => {\n        let info = roundUserInfo.find((item: AV.Object) => {\n          return item.get('player').get('objectId') === userId;\n        });\n        let findUser;\n        if (info) {\n          findUser = info;\n        } else {\n          const user = context.users.find(\n            (item: AV.Object) => item.get('objectId') === userId\n          );\n          const RoundUserInfo = AV.Object.extend('RoundUserInfo');\n          findUser = new RoundUserInfo();\n          findUser.set('round', r);\n          findUser.set('player', user);\n        }\n        findUser.set('amount', userAmount[userId]);\n        allRoundUserInfos.push(findUser);\n      });\n      return Promise.all([r.save(), AV.Object.saveAll(allRoundUserInfos)]).then(() => {\n        if (onOk) {\n          onOk();\n        }\n      }).catch(e => {\n        message.error(e.message);\n      });\n    } else {\n      const Round = AV.Object.extend('Round');\n      const round = new Round();\n      round.set('dateTime', dateTime);\n      round.set('leverage', leverage);\n      const RoundUserInfo = AV.Object.extend('RoundUserInfo');\n      let allRoundUserInfos: AV.Object[] = [];\n      Object.keys(userAmount).forEach((userId) => {\n        const roundUserInfo = new RoundUserInfo();\n        const user = context.users.find(\n          (item: AV.Object) => item.get('objectId') === userId\n        );\n        roundUserInfo.set('round', round);\n        roundUserInfo.set('player', user);\n        roundUserInfo.set('amount', userAmount[userId]);\n        allRoundUserInfos.push(roundUserInfo);\n      });\n      return AV.Object.saveAll(allRoundUserInfos).then(() => {\n        if (onOk) {\n          onOk();\n        }\n      }).catch(e => {\n        message.error(e.message);\n      });\n    }\n  }\n\n  function handleDateTimeChange(v: moment.Moment | null) {\n    if (v) {\n      setDateTime(v.format('YYYY/MM/DD'));\n    } else {\n      setDateTime('');\n    }\n  }\n\n  function handleLeverageChange(v: number | undefined) {\n    setLeverage(v || 0.1);\n  }\n\n  function handleAmountChange(v: number | undefined, user: AV.Object) {\n    v = v ? +v : 0;\n    let tmp = {\n      ...userAmount,\n    };\n    tmp[user.get('objectId')] = v;\n    setUserAmount(tmp);\n  }\n\n  function getTableColumns() {\n    let ret = [\n      { title: '场次', key: 'roundNO', dataIndex: 'roundNO', ellipsis: true },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: () => {\n          return (\n            <div style={{ width: '150px' }}>\n              <DatePicker\n                onChange={handleDateTimeChange}\n                format=\"YYYY/MM/DD\"\n                value={moment(dateTime, 'YYYY/MM/DD')}\n              />\n            </div>\n          );\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: () => {\n          return (\n            <InputNumber onChange={handleLeverageChange} value={leverage} />\n          );\n        },\n      },\n    ];\n    return ret.concat(\n      context.users.map((user: AV.Object) => {\n        return {\n          title: user.get('name'),\n          key: user.get('objectId'),\n          ellipsis: true,\n          render: () => {\n            return (\n              <InputNumber\n                onChange={(v) => handleAmountChange(v, user)}\n                value={userAmount[user.get('objectId')]}\n              />\n            );\n          },\n        };\n      })\n    );\n  }\n\n  function handleCancel() {\n    // setList([{ roundNO: 1 }]);\n    // setDateTime('');\n    // setLeverage(0.1);\n    // setUserAmount({});\n    onCancel();\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={handleCancel}\n      onOk={handleOk}\n      width={1200}\n    >\n      <div className=\"add-round-wrap\">\n        <Table\n          dataSource={list}\n          columns={getTableColumns()}\n          pagination={false}\n          scroll={{ x: true }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Modal, Table } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\n\ninterface Props {\n  onModify: OnModifyFunc;\n  visible: boolean;\n  onOk: EmptyFunc;\n  onCancel: EmptyFunc;\n}\n\ninterface OnModifyFunc {\n  (index: number): void;\n}\n\ninterface EmptyFunc {\n  (): void;\n}\n\nexport default function DetailsModal({\n  visible,\n  onModify,\n  onOk,\n  onCancel,\n}: Props) {\n  const context = useContext(AppContext);\n\n  function getTableColumns() {\n    let ret: object[] = [\n      {\n        title: '场次',\n        key: 'roundNO',\n        ellipsis: true,\n        render: (text: string, record: AV.Object, index: number) => {\n          return index + 1;\n        },\n      },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: (text: string, record: AV.Object) => {\n          return record.get('dateTime');\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: (text: string, record: AV.Object) => {\n          return record.get('leverage');\n        },\n      },\n    ];\n    let users: AV.Object[] = context.users;\n    ret = ret.concat(\n      users.map((user: AV.Object) => {\n        return {\n          title: user.get('name'),\n          key: user.get('objectId'),\n          ellipsis: true,\n          render: (text: string, record: AV.Object, index: number) => {\n            return getUserRoundInfo(user.get('objectId'), index);\n          },\n        };\n      })\n    );\n    const currentUser = AV.User.current();\n    if (currentUser) {\n      ret = ret.concat({\n        title: '操作',\n        key: 'opt',\n        render: (text: string, record: AV.Object, index: number) => {\n          return (\n            <div className=\"details-opt\">\n              <span onClick={() => handleModifyClick(index)}>修改</span>\n            </div>\n          );\n        },\n      });\n    }\n    return ret;\n  }\n\n  function handleModifyClick(index: number) {\n    onModify(index);\n  }\n\n  function getUserRoundInfo(userId: string, index: number) {\n    let { roundUserInfo } = context;\n    let list: AV.Object[] = roundUserInfo[index];\n    if (list) {\n      let info = list.find((item: AV.Object) => {\n        return item.get('player').get('objectId') === userId;\n      });\n      return (info && info.get('amount')) || '';\n    }\n    return '';\n  }\n\n  let rounds: AV.Object[] = context.rounds;\n  return (\n    <Modal visible={visible} onCancel={onCancel} onOk={onOk} width={1200}>\n      <div className=\"details-round-wrap\">\n        <Table\n          dataSource={rounds}\n          columns={getTableColumns()}\n          pagination={false}\n          scroll={{ x: true }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport List from '../components/List';\nimport AddRoundModal from '../components/AddRoundModal';\nimport DetailsModal from '../components/DetailsModal';\nimport AV from 'leancloud-storage';\n\ninterface AddDoneFunc {\n  (): void;\n}\n\ninterface Props {\n  onAddDone: AddDoneFunc;\n  list: []\n}\n\nexport default function Home({ onAddDone, list }: Props) {\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [isModify, setIsModify] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [modifyIndex, setModifyIndex] = useState(-1);\n\n  const currentUser = AV.User.current();\n  return (\n    <div className=\"page home\">\n      <List list={list} />\n      <div className=\"btn-wrap\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setShowAddModal(true);\n          }}\n        >\n          明细\n        </Button>\n        {currentUser ? (\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setIsModify(false);\n              setShowDetailsModal(true);\n            }}\n          >\n            增加记录\n          </Button>\n        ) : null}\n      </div>\n      <AddRoundModal\n        visible={showAddModal}\n        onOk={() => {\n          setShowAddModal(false);\n          onAddDone();\n        }}\n        onCancel={() => {\n          setShowAddModal(false);\n        }}\n        isModify={isModify}\n        roundIndex={modifyIndex}\n      ></AddRoundModal>\n      <DetailsModal\n        visible={showDetailsModal}\n        onOk={() => {\n          setShowDetailsModal(false);\n        }}\n        onCancel={() => {\n          setShowDetailsModal(false);\n        }}\n        onModify={(index) => {\n          setModifyIndex(index);\n          setIsModify(true);\n          setShowDetailsModal(false);\n          setShowAddModal(true);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Upload, Button, message, Spin } from 'antd';\nimport AV from 'leancloud-storage';\nimport './photo.scss';\n\nexport default function Photo() {\n  const [pics, setPics] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getPics();\n  }, []);\n\n  const user = AV.User.current();\n\n  function handleBeforeUpload(file: File, files: File[]): boolean {\n    files.forEach((f) => {\n      let avFile = new AV.File(f.name, f);\n      avFile.metaData('type', 0); // 0: game pic\n      const GamePic = AV.Object.extend('GamePic');\n      const pic = new GamePic();\n      pic.set('file', avFile);\n      pic.set('uploader', AV.User.current());\n      pic.save({ keepFileName: true }).then(() => {\n        message.success('上传成功');\n        getPics();\n      });\n    });\n    return false;\n  }\n\n  function getPics() {\n    const query = new AV.Query('GamePic');\n    query.limit(5);\n    query.skip(pics.length);\n    setIsLoading(true);\n    query.find().then((gamePics) => {\n      setPics(pics.concat(gamePics as []));\n      setIsLoading(false);\n    });\n  }\n\n  return (\n    <div className=\"page photo\">\n      {user ? (\n        <div className=\"upload-wrap\">\n          <Upload\n            beforeUpload={handleBeforeUpload}\n            showUploadList={false}\n            multiple={true}\n          >\n            <Button>上传图片</Button>\n          </Upload>\n        </div>\n      ) : null}\n\n      <div className=\"pics\">\n        {pics.map((gamePic: AV.Object) => {\n          return (\n            <img\n              key={gamePic.get('objectId')}\n              src={gamePic.get('file').get('url')}\n              alt=\"\"\n            />\n          );\n        })}\n      </div>\n      <div className=\"spin-wrap\">\n        {isLoading ? (\n          <Spin />\n        ) : (\n          <span className=\"link-style\" onClick={getPics}>\n            加载更多\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { ChangeEvent, KeyboardEvent, Component, createRef } from 'react';\nimport { Input, Button, Spin } from 'antd';\nimport AV from 'leancloud-storage';\nimport {\n  Realtime,\n  IMClient,\n  PresistentConversation,\n  Event,\n  TextMessage,\n  ChatRoom,\n} from 'leancloud-realtime';\nimport moment from 'moment';\nimport './message.scss';\n\nconst HISTORY_MESSAGES_KEY = 'texasMessages';\n\ninterface AttrMap extends Object {\n  [key: string]: any;\n}\n\ninterface State {\n  text: string;\n  messageList: TextMessage[];\n  isJoining: boolean;\n}\n\nexport default class IM extends Component {\n  state: State = {\n    text: '',\n    messageList: [],\n    isJoining: false,\n  };\n\n  private client: IMClient | null = null;\n  private room: ChatRoom | null = null;\n  private scrollRef = createRef<HTMLDivElement>();\n  private user = AV.User.current();\n\n  componentDidMount() {\n    if (this.user) {\n      new Realtime({\n        appId: 'xfKlG0D6VO6MgwOUTzQ31f7W-gzGzoHsz',\n        appKey: 'k9TuwPqFQmsMqj3HYa83WCFs',\n        server: 'https://xfklg0d6.lc-cn-n1-shared.com',\n      })\n        .createIMClient(this.user)\n        .then((client) => {\n          this.client = client;\n          var query = client.getQuery().equalTo('tr', true); // 聊天室对象\n          query\n            .find()\n            .then((conversations) => {\n              if (conversations.length < 1) {\n                this.createRoom();\n              } else {\n                this.joinRoom(conversations[0]);\n              }\n            })\n            .then(() => {\n              this.listenMessage();\n            })\n            .catch(console.error);\n        });\n    }\n  }\n\n  createRoom() {\n    if (this.client) {\n      this.client\n        .createChatRoom({ name: '深挖洞，广积粮，不称王' })\n        .then((r) => {\n          this.room = r;\n          this.setState({\n            isJoining: false,\n          });\n          this.loadLocalMessages();\n        });\n    }\n  }\n\n  loadLocalMessages() {\n    let messages = localStorage.getItem(HISTORY_MESSAGES_KEY);\n    if (messages) {\n      messages = JSON.parse(messages);\n      this.setState({\n        messageList: messages\n      });\n    }\n  }\n\n  joinRoom(r: PresistentConversation) {\n    r.join().then(() => {\n      this.room = r;\n      this.setState({\n        isJoining: false,\n      });\n      this.loadLocalMessages();\n    });\n  }\n\n  handleTextMessageChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      text: e.target.value,\n    });\n  };\n\n  handleTextMessageEnterChange = (e: KeyboardEvent<HTMLInputElement>) => {\n    this.setState({\n      text: e.currentTarget.value,\n    });\n    this.handleSend();\n  };\n\n  listenMessage() {\n    if (this.client) {\n      // 当前用户被添加至某个对话\n      this.client.on(Event.INVITED, (payload, conversation) => {\n        // console.log(payload.invitedBy, conversation.id);\n      });\n\n      // 当前用户收到了某一条消息，可以通过响应 Event.MESSAGE 这一事件来处理。\n      this.client.on(Event.MESSAGE, (message: TextMessage, conversation) => {\n        this.updateMessageList(message);\n      });\n    }\n  }\n\n  handleSend = () => {\n    if (!this.state.text) return;\n    const m = new TextMessage(this.state.text);\n    m.setAttributes({ senderName: this.user.getUsername() });\n    if (this.room) {\n      this.room.send(m);\n      this.updateMessageList(m);\n      this.setState({\n        text: '',\n      });\n    }\n  };\n\n  updateMessageList(m: TextMessage) {\n    this.setState(\n      {\n        messageList: this.state.messageList.concat(m),\n      },\n      () => {\n        localStorage.setItem(\n          HISTORY_MESSAGES_KEY,\n          JSON.stringify(this.state.messageList.slice(0, 100))\n        );\n      }\n    );\n    setTimeout(() => {\n      let current = this.scrollRef.current;\n      if (current) {\n        current.scrollTo(0, current.scrollHeight);\n      }\n    }, 100);\n  }\n\n  getSenderName(m: TextMessage) {\n    let attrs: AttrMap = m.attributes;\n    return attrs['senderName'];\n  }\n\n  render() {\n    if (!this.user) {\n      return (\n        <div className=\"message-wrap\">\n          <div>请先登录</div>\n        </div>\n      );\n    }\n\n    if (this.state.isJoining) {\n      return (\n        <div className=\"message-wrap\">\n          <Spin tip=\"正在加入聊天室...\"></Spin>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"message-wrap\">\n        <div className=\"messages\" ref={this.scrollRef}>\n          {this.state.messageList.map((m) => {\n            return (\n              <div className=\"message-item\" key={m.id}>\n                <div>\n                  <span className=\"username\">{this.getSenderName(m)}</span>\n                  <span className=\"message-time\">\n                    {moment(m.timestamp).format('YYYY/MM/DD HH:mm:ss')}\n                  </span>\n                </div>\n                <div className=\"message-content\">{m.text}</div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"send-wrap\">\n          <Input\n            value={this.state.text}\n            onChange={this.handleTextMessageChange}\n            onPressEnter={this.handleTextMessageEnterChange}\n          />\n          <Button size=\"large\" onClick={this.handleSend}>\n            发送\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Select, Button, message, Upload, Avatar } from 'antd';\nimport AV from 'leancloud-storage';\nimport { EditOutlined, UserOutlined } from '@ant-design/icons';\nimport AppContext from '../../store/context';\nimport './profile.scss';\n\ninterface State {\n  isEdit: boolean;\n  relativePlayer: string;\n  isSaving: boolean;\n}\n\nexport default class Profile extends React.Component {\n  static contextType = AppContext;\n\n  state: State = {\n    isEdit: false,\n    relativePlayer: '',\n    isSaving: false,\n  };\n\n  getRelativePlayer() {\n    const user = AV.User.current();\n    let player = user.get('player');\n    if (!player) {\n      return '--';\n    }\n    let p = this.context.users.find(\n      (u: AV.Object) => u.get('objectId') === player.get('objectId')\n    );\n    return (p && p.get('name')) || '--';\n  }\n\n  handleEditClick = () => {\n    this.setState({\n      isEdit: true,\n    });\n  };\n\n  handleRelativePlayer = () => {\n    if (this.state.isSaving) return;\n    const player = AV.Object.createWithoutData(\n      'Player',\n      this.state.relativePlayer\n    );\n    const user = AV.User.current();\n    player.set('user', user);\n    user.set('player', player);\n    this.setState({\n      isSaving: true,\n    });\n    Promise.all([player.save(), user.save()]).then(\n      () => {\n        this.setState({\n          isEdit: false,\n          isSaving: false,\n        });\n      },\n      (err) => {\n        message.error(err.message);\n        this.setState({\n          isSaving: false,\n        });\n      }\n    );\n  };\n\n  handlePlayerSelectChange = (v: string) => {\n    this.setState({\n      relativePlayer: v,\n    });\n  };\n\n  renderPlayer() {\n    let { users } = this.context;\n    if (this.state.isEdit) {\n      const currentUser = AV.User.current();\n      let defaultSelect = currentUser.get('player');\n      defaultSelect = (defaultSelect && defaultSelect.get('objectId')) || '';\n      return (\n        <>\n          <Select\n            style={{ width: 120 }}\n            placeholder=\"请选择选手\"\n            onChange={this.handlePlayerSelectChange}\n            defaultValue={defaultSelect}\n          >\n            {users.map((player: AV.Object) => {\n              let id = player.get('objectId');\n              return (\n                <Select.Option value={id} key={id}>\n                  {player.get('name')}\n                </Select.Option>\n              );\n            })}\n          </Select>\n          <Button type=\"link\" onClick={this.handleRelativePlayer}>\n            保存\n          </Button>\n          <Button\n            type=\"link\"\n            onClick={() => {\n              this.setState({\n                isEdit: false,\n              });\n            }}\n          >\n            取消\n          </Button>\n          <span>未找到选手？请联系管理员添加</span>\n        </>\n      );\n    } else {\n      return (\n        <>\n          {this.getRelativePlayer()}\n          <div className=\"edit-wrap\" onClick={this.handleEditClick}>\n            <EditOutlined />\n          </div>\n        </>\n      );\n    }\n  }\n\n  handleUploadAvatar = (file: File) => {\n    let avFile = new AV.File(file.name, file);\n    avFile.metaData('type', 1); // 1: avatar\n    const user = AV.User.current();\n    user.set('avatar', avFile);\n    let player;\n    if (user.get('player')) {\n      player = user.get('player').get('objectId');\n      player = AV.Object.createWithoutData('Player', player);\n      player.set('avatar', avFile);\n    }\n    let req: any[] = [user.save()];\n    if (player) {\n      req.push(player.save());\n    }\n    Promise.all(req)\n      .then(() => {\n        message.success('上传成功');\n      })\n      .catch((err) => {\n        message.error(err.message);\n      });\n    return false;\n  };\n\n  renderAvatar() {\n    const user = AV.User.current();\n    const avatar = user.get('avatar');\n    return (\n      <>\n        <div className=\"avatar-wrap\">\n          {avatar ? (\n            <Avatar size={64} src={avatar.get('url')} />\n          ) : (\n            <Avatar size={64} icon={<UserOutlined />} />\n          )}\n        </div>\n        <Upload beforeUpload={this.handleUploadAvatar} showUploadList={false}>\n          <Button>上传</Button>\n        </Upload>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"page profile\">\n        <div className=\"row\">\n          <span className=\"label\">关联选手</span>\n          <div className=\"content\">{this.renderPlayer()}</div>\n        </div>\n        <div className=\"row\">\n          <span className=\"label\">头像</span>\n          <div className=\"content\">{this.renderAvatar()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Header from '../Header';\nimport './app.scss';\nimport 'antd/dist/antd.css';\nimport AppContext, { ContextType } from '../../store/context';\nimport AV from 'leancloud-storage';\nimport _ from 'lodash';\nimport Big from 'big.js';\nimport { ListItem } from '../List';\nimport TopBar from '../TopBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from '../../pages/Home';\nimport Photo from '../../pages/Photo';\nimport Message from '../../pages/Message';\nimport Profile from '../../pages/Profile';\n\ninterface State extends ContextType {\n  list: [];\n}\n\ninterface Map {\n  [key: string]: ListItem;\n}\n\nexport default class App extends Component {\n  setUsers = (list: AV.Queriable[]) => {\n    this.setState({\n      users: list,\n    });\n  };\n\n  setRounds = (list: AV.Queriable[]) => {\n    this.setState({\n      rounds: list,\n    });\n  };\n\n  setRoundUserInfo = (list: AV.Queriable[][]) => {\n    this.setState(\n      {\n        roundUserInfo: list,\n      },\n      this.calcList\n    );\n  };\n\n  setShowSession = (isShow?: boolean) => {\n    this.setState({\n      showSession: !!isShow,\n    });\n  };\n\n  state: State = {\n    users: [],\n    rounds: [],\n    roundUserInfo: [],\n    showSession: false,\n    setUsers: this.setUsers,\n    setRounds: this.setRounds,\n    setRoundUserInfo: this.setRoundUserInfo,\n    setShowSession: this.setShowSession,\n\n    list: [],\n  };\n\n  componentDidMount() {\n    this.getUsers();\n    this.getAllRounds();\n  }\n\n  getUsers = () => {\n    const query = new AV.Query('Player');\n    query.find().then((players: AV.Queriable[]) => {\n      this.setUsers(players);\n    });\n  };\n\n  getAllRounds = () => {\n    const rounds = new AV.Query('Round');\n    rounds.find().then((res) => {\n      Promise.all(\n        res.map((round) => {\n          return this.getRoundInfo(round);\n        })\n      ).then((roundInfos) => {\n        this.setRounds(res);\n        this.setRoundUserInfo(roundInfos);\n      });\n    });\n  };\n\n  getRoundInfo = (round: AV.Queriable) => {\n    const query = new AV.Query('RoundUserInfo');\n    query.equalTo('round', round);\n    return query.find();\n  };\n\n  handleAddDone = () => {\n    this.getAllRounds();\n  };\n\n  calcList() {\n    let { roundUserInfo, rounds } = this.state;\n    let tmp: Map = {};\n    roundUserInfo.forEach((round: AV.Object[], index) => {\n      let leverage = rounds[index].get('leverage');\n      round.forEach((info) => {\n        let player = info.get('player');\n        let amount = info.get('amount');\n        amount = +amount;\n        let playerId = player.get('objectId');\n        let userRoundInfo = tmp[playerId];\n        if (!userRoundInfo) {\n          userRoundInfo = {\n            max: 0,\n            min: 0,\n            total: 0,\n            totalBalance: 0,\n            count: 0,\n            player,\n            currentLeverage: 0,\n          };\n        }\n        if (amount > userRoundInfo.max) {\n          userRoundInfo.max = amount;\n        }\n        if (amount < userRoundInfo.min) {\n          userRoundInfo.min = amount;\n        }\n        userRoundInfo.total = +new Big(userRoundInfo.total)\n          .plus(amount)\n          .valueOf();\n        userRoundInfo.totalBalance = +new Big(userRoundInfo.totalBalance)\n          .plus(new Big(amount).times(leverage))\n          .valueOf();\n        if (amount !== 0) {\n          userRoundInfo.count++;\n        }\n        tmp[playerId] = userRoundInfo;\n      });\n    });\n    let list = _.values(tmp);\n    list.sort((a: ListItem, b: ListItem) => {\n      return b.totalBalance - a.totalBalance;\n    });\n    this.setState({\n      list,\n    });\n  }\n\n  render() {\n    let {\n      users,\n      rounds,\n      roundUserInfo,\n      showSession,\n      setUsers,\n      setRounds,\n      setRoundUserInfo,\n      setShowSession,\n      list,\n    } = this.state;\n    return (\n      <div className=\"app\">\n        <AppContext.Provider\n          value={{\n            users,\n            rounds,\n            roundUserInfo,\n            showSession,\n            setUsers,\n            setRounds,\n            setRoundUserInfo,\n            setShowSession,\n          }}\n        >\n          <Router>\n            <TopBar />\n            {/* <Header /> */}\n            <Switch>\n              <Route path=\"/photo\">\n                <Photo />\n              </Route>\n              <Route path=\"/message\">\n                <Message />\n              </Route>\n              <Route path=\"/profile\">\n                <Profile />\n              </Route>\n              <Route path=\"/\">\n                <Home list={list} onAddDone={this.handleAddDone} />\n              </Route>\n            </Switch>\n          </Router>\n        </AppContext.Provider>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport AV from 'leancloud-storage';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { ConfigProvider } from 'antd';\n\nAV.init({\n  appId: 'xfKlG0D6VO6MgwOUTzQ31f7W-gzGzoHsz',\n  appKey: 'k9TuwPqFQmsMqj3HYa83WCFs',\n  serverURL: 'https://xfklg0d6.lc-cn-n1-shared.com',\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider locale={zhCN}>\n      <App />\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}