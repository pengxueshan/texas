{"version":3,"sources":["components/Header.js","store/context.js","components/List.js","components/AddRoundModal.js","components/DetailsModal.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","createContext","users","rounds","roundUserInfo","setUsers","setRounds","setRoundUserInfo","List","list","context","useContext","AppContext","columns","title","key","render","text","record","index","playerId","user","find","item","get","getUserName","player","dataIndex","dataSource","AddRoundModal","state","loading","roundNO","dateTime","leverage","userAmount","handleOk","round","AV","Object","extend","set","RoundUserInfo","allRoundUserInfos","keys","forEach","userId","push","saveAll","then","props","onOk","handleDateTimeChange","v","setState","format","handleLeverageChange","handleAmountChange","console","log","getAllRounds","Query","count","res","ret","ellipsis","style","width","onChange","this","concat","map","visible","onCancel","confirmLoading","getTableColumns","pagination","scroll","x","Component","contextType","DetailsModal","getUserRoundInfo","info","App","showModal","addLoading","showDetailsModal","getUsers","players","Promise","all","getRoundInfo","roundInfos","query","equalTo","calcList","handleAddClick","handleDetailsClick","handleModalCancel","handleModalConfirm","handleDetailsConfirm","handleDetailsCancel","tmp","lastRound","length","currentLeverage","amount","userRoundInfo","max","min","total","totalBalance","_","values","sort","a","b","Provider","value","type","onClick","Boolean","window","location","hostname","match","init","appId","appKey","serverURL","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.65f730c6.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header() {\n  return (\n    <div className=\"\">\n      {/* <h1>一壶科技德州大赛排行榜</h1> */}\n    </div>\n  );\n}","import React from 'react';\n\nexport const defaultContext = {\n  users: [],\n  rounds: [],\n  roundUserInfo: [],\n  setUsers: () => {},\n  setRounds: () => {},\n  setRoundUserInfo: () => {},\n};\n\nexport default React.createContext(defaultContext);\n","import React, { useContext } from 'react';\nimport { Table } from 'antd';\nimport AppContext from '../store/context';\n\nexport default function List({ list }) {\n  const context = useContext(AppContext);\n  const columns = [\n    {\n      title: '排名',\n      key: 'rank',\n      render: (text, record, index) => {\n        return index + 1;\n      },\n    },\n    {\n      title: '选手',\n      key: 'username',\n      render: (text, record) => {\n        return getUserName(record.player.get('objectId'));\n      },\n    },\n    { title: '参赛次数', key: 'count', dataIndex: 'count' },\n    { title: '单次最大盈利', key: 'max', dataIndex: 'max' },\n    { title: '单次最大亏损', key: 'min', dataIndex: 'min' },\n    { title: '累计筹码盈亏', key: 'total', dataIndex: 'total' },\n    { title: '累计盈亏金额', key: 'totalBalance', dataIndex: 'totalBalance' },\n    { title: '当前赔率', key: 'currentLeverage', dataIndex: 'currentLeverage' },\n    { title: '操作', key: 'opt', dataIndex: 'opt' },\n  ];\n\n  function getUserName(playerId) {\n    let { users } = context;\n    let user = users.find((item) => item.get('objectId') === playerId);\n    if (user) {\n      return user.get('name');\n    }\n    return '';\n  }\n\n  return (\n    <div className>\n      <Table dataSource={list} columns={columns} />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Modal, InputNumber, DatePicker, Table } from 'antd';\nimport AppContext from '../store/context';\nimport AV from 'leancloud-storage';\n\nexport default class AddRoundModal extends Component {\n  static contextType = AppContext;\n\n  state = {\n    loading: false,\n    list: [{ roundNO: 1 }],\n    dateTime: '',\n    leverage: 0.1,\n    userAmount: {},\n  };\n\n  handleOk = () => {\n    let { dateTime, leverage, userAmount } = this.state;\n    const Round = AV.Object.extend('Round');\n    const round = new Round();\n    round.set('dateTime', dateTime);\n    round.set('leverage', leverage);\n    const RoundUserInfo = AV.Object.extend('RoundUserInfo');\n    let allRoundUserInfos = [];\n    Object.keys(userAmount).forEach((userId) => {\n      const roundUserInfo = new RoundUserInfo();\n      const user = this.context.users.find(\n        (item) => item.get('objectId') === userId\n      );\n      roundUserInfo.set('round', round);\n      roundUserInfo.set('player', user);\n      roundUserInfo.set('amount', userAmount[userId]);\n      allRoundUserInfos.push(roundUserInfo);\n    });\n    AV.Object.saveAll(allRoundUserInfos).then(() => {\n      if (this.props.onOk) {\n        this.props.onOk();\n      }\n    });\n  };\n\n  handleDateTimeChange = (v) => {\n    this.setState({\n      dateTime: v.format('YYYY/MM/DD'),\n    });\n  };\n\n  handleLeverageChange = (v) => {\n    this.setState({\n      leverage: v,\n    });\n  };\n\n  handleAmountChange = (v, user) => {\n    console.log('user:', user.get('objectId'));\n    let userAmount = this.state.userAmount;\n    userAmount[user.get('objectId')] = v;\n    this.setState({\n      userAmount,\n    });\n  };\n\n  getTableColumns() {\n    let ret = [\n      { title: '场次', key: 'roundNO', dataIndex: 'roundNO', ellipsis: true },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: () => {\n          return (\n            <div style={{width: '150px'}}>\n              <DatePicker\n                onChange={this.handleDateTimeChange}\n                format=\"YYYY/MM/DD\"\n              />\n            </div>\n          );\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: () => {\n          return <InputNumber onChange={this.handleLeverageChange} />;\n        },\n      },\n    ];\n    let { users } = this.context;\n    return ret.concat(\n      users.map((user) => {\n        return {\n          title: user.get('name'),\n          key: user.get('objectId'),\n          ellipsis: true,\n          render: (text, record) => {\n            return (\n              <InputNumber onChange={(v) => this.handleAmountChange(v, user)} />\n            );\n          },\n        };\n      })\n    );\n  }\n\n  getAllRounds = () => {\n    const rounds = new AV.Query('Round');\n    rounds.count().then((res) => {\n      this.setState({\n        list: [{ roundNO: res + 1 }],\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.getAllRounds();\n  }\n\n  render() {\n    return (\n      <Modal\n        visible={this.props.visible}\n        onCancel={this.props.onCancel}\n        onOk={this.handleOk}\n        confirmLoading={this.state.loading}\n        width={800}\n      >\n        <div className=\"add-round-wrap\">\n          <Table\n            dataSource={this.state.list}\n            columns={this.getTableColumns()}\n            pagination={false}\n            scroll={{ x: true }}\n          />\n        </div>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Modal, Table } from 'antd';\nimport AppContext from '../store/context';\n\nexport default class DetailsModal extends Component {\n  static contextType = AppContext;\n\n  getTableColumns() {\n    let ret = [\n      {\n        title: '场次',\n        key: 'roundNO',\n        ellipsis: true,\n        render: (text, record, index) => {\n          return index + 1;\n        },\n      },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: (text, record) => {\n          return record.get('dateTime');\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: (text, record) => {\n          return record.get('leverage');\n        },\n      },\n    ];\n    let { users } = this.context;\n    return ret.concat(\n      users.map((user) => {\n        return {\n          title: user.get('name'),\n          key: user.get('objectId'),\n          ellipsis: true,\n          render: (text, record, index) => {\n            return this.getUserRoundInfo(user.get('objectId'), index);\n          },\n        };\n      })\n    );\n  }\n\n  getUserRoundInfo = (userId, index) => {\n    let { roundUserInfo } = this.context;\n    let list = roundUserInfo[index];\n    if (list) {\n      let info = list.find((item) => {\n        return item.get('player').get('objectId') === userId;\n      });\n      return (info && info.get('amount')) || '';\n    }\n    return '';\n  };\n\n  render() {\n    let { rounds } = this.context;\n    return (\n      <Modal\n        visible={this.props.visible}\n        onCancel={this.props.onCancel}\n        onOk={this.props.onOk}\n        width={800}\n      >\n        <div className=\"details-round-wrap\">\n          <Table\n            dataSource={rounds}\n            columns={this.getTableColumns()}\n            pagination={false}\n            scroll={{ x: true }}\n          />\n        </div>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport List from './components/List';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport AppContext from './store/context';\nimport AV from 'leancloud-storage';\nimport { Button } from 'antd';\nimport AddRoundModal from './components/AddRoundModal';\nimport DetailsModal from './components/DetailsModal';\nimport _ from 'lodash';\n\nexport default class App extends Component {\n  state = {\n    users: [],\n    rounds: [],\n    roundUserInfo: [],\n    setUsers: this.setUsers,\n    setRounds: this.setRounds,\n    setRoundUserInfo: this.setRoundUserInfo,\n\n    list: [],\n\n    showModal: false,\n    addLoading: false,\n    showDetailsModal: false,\n  };\n  componentDidMount() {\n    this.getUsers();\n    this.getAllRounds();\n  }\n  getUsers = () => {\n    const query = new AV.Query('Player');\n    query.find().then((players) => {\n      this.setUsers(players);\n    });\n  };\n  setUsers = (list) => {\n    this.setState({\n      users: list,\n    });\n  };\n  getAllRounds = () => {\n    const rounds = new AV.Query('Round');\n    rounds.find().then((res) => {\n      Promise.all(\n        res.map((round) => {\n          return this.getRoundInfo(round);\n        })\n      ).then((roundInfos) => {\n        this.setRounds(res);\n        this.setRoundUserInfo(roundInfos);\n      });\n    });\n  };\n  setRounds = (list) => {\n    this.setState({\n      rounds: list,\n    });\n  };\n  getRoundInfo = (round) => {\n    const query = new AV.Query('RoundUserInfo');\n    query.equalTo('round', round);\n    return query.find();\n  };\n  setRoundUserInfo = (list) => {\n    this.setState({\n      roundUserInfo: list,\n    }, this.calcList);\n  };\n  handleAddClick = () => {\n    this.setState({\n      showModal: true,\n    });\n  };\n  handleDetailsClick = () => {\n    this.setState({\n      showDetailsModal: true,\n    });\n  };\n  handleModalCancel = () => {\n    this.setState({\n      showModal: false,\n    });\n  };\n  handleModalConfirm = () => {\n    this.setState({\n      showModal: false,\n    });\n    this.getAllRounds();\n  };\n  handleDetailsConfirm = () => {\n    this.setState({\n      showDetailsModal: false,\n    });\n  };\n  handleDetailsCancel = () => {\n    this.setState({\n      showDetailsModal: false,\n    });\n  };\n  calcList() {\n    let { roundUserInfo, rounds } = this.state;\n    let tmp = {};\n    let lastRound = rounds[rounds.length - 1];\n    let currentLeverage = 0;\n    if (lastRound) {\n      currentLeverage = lastRound.get('leverage');\n    }\n    roundUserInfo.forEach((round, index) => {\n      let leverage = rounds[index].get('leverage');\n      round.forEach((info) => {\n        let player = info.get('player');\n        let amount = info.get('amount');\n        let playerId = player.get('objectId');\n        let userRoundInfo = tmp[playerId];\n        if (!userRoundInfo) {\n          userRoundInfo = {\n            max: 0,\n            min: 0,\n            total: 0,\n            totalBalance: 0,\n            count: 0,\n            player,\n            currentLeverage,\n          };\n        }\n        if (amount > userRoundInfo.max) {\n          userRoundInfo.max = amount;\n        }\n        if (amount < userRoundInfo.min) {\n          userRoundInfo.min = amount;\n        }\n        userRoundInfo.total += amount;\n        userRoundInfo.totalBalance += amount * leverage;\n        userRoundInfo.count++;\n        tmp[playerId] = userRoundInfo;\n      });\n    });\n    let list = _.values(tmp);\n    list.sort((a, b) => {\n      return b.totalBalance - a.totalBalance;\n    });\n    this.setState({\n      list\n    });\n  }\n  render() {\n    let {\n      users,\n      rounds,\n      roundUserInfo,\n      setUsers,\n      setRounds,\n      setRoundUserInfo,\n      list\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <AppContext.Provider\n          value={{\n            users,\n            rounds,\n            roundUserInfo,\n            setUsers,\n            setRounds,\n            setRoundUserInfo,\n          }}\n        >\n          <Header />\n          <List list={list} />\n          <div className=\"btn-wrap\">\n            <Button type=\"primary\" onClick={this.handleDetailsClick}>\n              明细\n            </Button>\n            <Button type=\"primary\" onClick={this.handleAddClick}>\n              增加记录\n            </Button>\n          </div>\n          <AddRoundModal\n            visible={this.state.showModal}\n            onOk={this.handleModalConfirm}\n            onCancel={this.handleModalCancel}\n          ></AddRoundModal>\n          <DetailsModal\n            visible={this.state.showDetailsModal}\n            onOk={this.handleDetailsConfirm}\n            onCancel={this.handleDetailsCancel}\n          />\n        </AppContext.Provider>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport AV from 'leancloud-storage';\n\nAV.init({\n  appId: 'xfKlG0D6VO6MgwOUTzQ31f7W-gzGzoHsz',\n  appKey: 'k9TuwPqFQmsMqj3HYa83WCFs',\n  serverURL: 'https://xfklg0d6.lc-cn-n1-shared.com',\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}