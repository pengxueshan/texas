{"version":3,"sources":["components/List/index.tsx","components/AddRoundModal/index.tsx","components/DetailsModal/index.tsx","pages/Home.tsx"],"names":["List","list","context","useContext","AppContext","columns","title","key","render","text","record","index","playerId","player","get","users","find","item","avatar","name","className","size","src","icon","UserOutlined","dataIndex","sorter","a","b","max","min","total","totalBalance","dataSource","pagination","AddRoundModal","isModify","roundIndex","visible","onOk","onCancel","rounds","roundUserInfo","useState","roundNO","length","setList","dateTime","setDateTime","leverage","setLeverage","userAmount","setUserAmount","handleDateTimeChange","v","format","handleLeverageChange","useEffect","round","amount","forEach","r","AV","Object","createWithoutData","set","allRoundUserInfos","keys","userId","findUser","info","user","extend","push","Promise","all","save","saveAll","then","catch","e","message","error","RoundUserInfo","width","ellipsis","console","log","style","onChange","value","moment","undefined","concat","map","tmp","handleAmountChange","scroll","x","DetailsModal","onModify","ret","getUserRoundInfo","User","current","onClick","handleModifyClick","getTableColumns","Home","onAddDone","showAddModal","setShowAddModal","setIsModify","showDetailsModal","setShowDetailsModal","modifyIndex","setModifyIndex","currentUser","type"],"mappings":"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","file":"static/js/9.e24aadc5.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { Table, Avatar } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\nimport { UserOutlined } from '@ant-design/icons';\nimport './list.scss';\n\ninterface Props {\n  list: Array<ListItem>;\n}\n\nexport interface ListItem {\n  max: number;\n  min: number;\n  total: number;\n  totalBalance: number;\n  count: number;\n  player: AV.Object;\n  currentLeverage: number;\n}\n\nexport default function List({ list }: Props) {\n  const context = useContext(AppContext);\n  const columns = [\n    {\n      title: '排名',\n      key: 'rank',\n      render: (text: string, record: ListItem, index: number) => {\n        return index + 1;\n      },\n    },\n    {\n      title: '选手',\n      key: 'username',\n      render: (text: string, record: ListItem) => {\n        let player = getPlayer(record.player.get('objectId'));\n        let avatar = player?.get('avatar');\n        let name = player?.get('name');\n        return (\n          <div className=\"player-wrap\">\n            <div className=\"avatar-wrap\">\n              {avatar ? (\n                <Avatar size={24} src={avatar.get('url')} />\n              ) : (\n                <Avatar size={24} icon={<UserOutlined />} />\n              )}\n            </div>\n            {name}\n          </div>\n        );\n      },\n    },\n    { title: '参赛次数', key: 'count', dataIndex: 'count' },\n    {\n      title: '单次最大盈利',\n      key: 'max',\n      dataIndex: 'max',\n      sorter: (a: ListItem, b: ListItem) => a.max - b.max,\n    },\n    {\n      title: '单次最大亏损',\n      key: 'min',\n      dataIndex: 'min',\n      sorter: (a: ListItem, b: ListItem) => a.min - b.min,\n    },\n    {\n      title: '累计筹码盈亏',\n      key: 'total',\n      dataIndex: 'total',\n      sorter: (a: ListItem, b: ListItem) => a.total - b.total,\n    },\n    {\n      title: '累计盈亏金额',\n      key: 'totalBalance',\n      dataIndex: 'totalBalance',\n      sorter: (a: ListItem, b: ListItem) => a.totalBalance - b.totalBalance,\n    },\n    { title: '当前赔率', key: 'currentLeverage', dataIndex: 'currentLeverage' },\n    { title: '操作', key: 'opt', dataIndex: 'opt' },\n  ];\n\n  function getPlayer(playerId: string) {\n    let users: AV.Object[] = context.users;\n    return users.find((item: AV.Object) => item.get('objectId') === playerId);\n  }\n\n  return (\n    <div className=\"rank-wrap\">\n      <Table dataSource={list} columns={columns} pagination={false} />\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Modal, InputNumber, DatePicker, Table, message } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\nimport moment from 'moment';\n\nexport interface Props {\n  isModify?: boolean;\n  roundIndex?: number;\n  onOk: Function;\n  visible: boolean;\n  onCancel: Function;\n}\n\ninterface AmountMap {\n  [key: string]: any;\n  [index: number]: any;\n}\n\nexport default function AddRoundModal({\n  isModify = false,\n  roundIndex = 0,\n  visible,\n  onOk,\n  onCancel,\n}: Props) {\n  const context = useContext(AppContext);\n  let { rounds, roundUserInfo } = context;\n  const [list, setList] = useState([{ roundNO: rounds.length + 1 }]);\n  const [dateTime, setDateTime] = useState('');\n  const [leverage, setLeverage] = useState(0.1);\n  const [userAmount, setUserAmount] = useState<AmountMap>({});\n\n  useEffect(() => {\n    if (isModify) {\n      let list: AV.Object[] = roundUserInfo[roundIndex];\n      let round: AV.Object = rounds[roundIndex];\n      let amount: AmountMap = {};\n      if (list) {\n        list.forEach((item: AV.Object) => {\n          amount[item.get('player').get('objectId')] = item.get('amount');\n        });\n      }\n      setList([{ roundNO: roundIndex + 1 }]);\n      setLeverage(round.get('leverage'));\n      setDateTime(round.get('dateTime'));\n      setUserAmount(amount);\n    }\n  }, [isModify, roundUserInfo, roundIndex, rounds]);\n\n  function handleOk() {\n    if (isModify) {\n      let round: AV.Object = context.rounds[roundIndex];\n      let roundUserInfo: AV.Object[] = context.roundUserInfo[roundIndex];\n      const r = AV.Object.createWithoutData('Round', round.get('objectId'));\n      r.set('dateTime', dateTime);\n      r.set('leverage', leverage);\n      let allRoundUserInfos: any[] = [];\n      Object.keys(userAmount).forEach((userId: string) => {\n        let info = roundUserInfo.find((item: AV.Object) => {\n          return item.get('player').get('objectId') === userId;\n        });\n        let findUser;\n        if (info) {\n          findUser = info;\n        } else {\n          const user = context.users.find(\n            (item: AV.Object) => item.get('objectId') === userId\n          );\n          const RoundUserInfo = AV.Object.extend('RoundUserInfo');\n          findUser = new RoundUserInfo();\n          findUser.set('round', r);\n          findUser.set('player', user);\n        }\n        findUser.set('amount', userAmount[userId]);\n        allRoundUserInfos.push(findUser);\n      });\n      return Promise.all([r.save(), AV.Object.saveAll(allRoundUserInfos)])\n        .then(() => {\n          if (onOk) {\n            onOk();\n          }\n        })\n        .catch((e) => {\n          message.error(e.message);\n        });\n    } else {\n      const Round = AV.Object.extend('Round');\n      const round = new Round();\n      round.set('dateTime', dateTime);\n      round.set('leverage', leverage);\n      const RoundUserInfo = AV.Object.extend('RoundUserInfo');\n      let allRoundUserInfos: AV.Object[] = [];\n      Object.keys(userAmount).forEach((userId) => {\n        const roundUserInfo = new RoundUserInfo();\n        const user = context.users.find(\n          (item: AV.Object) => item.get('objectId') === userId\n        );\n        roundUserInfo.set('round', round);\n        roundUserInfo.set('player', user);\n        roundUserInfo.set('amount', userAmount[userId]);\n        allRoundUserInfos.push(roundUserInfo);\n      });\n      return AV.Object.saveAll(allRoundUserInfos)\n        .then(() => {\n          if (onOk) {\n            onOk();\n          }\n        })\n        .catch((e) => {\n          message.error(e.message);\n        });\n    }\n  }\n\n  function handleDateTimeChange(v: moment.Moment | null) {\n    if (v) {\n      setDateTime(v.format('YYYY/MM/DD'));\n    } else {\n      setDateTime('');\n    }\n  }\n\n  function handleLeverageChange(v: number | undefined) {\n    setLeverage(v || 0.1);\n  }\n\n  function handleAmountChange(v: number | undefined, user: AV.Object) {\n    v = v ? +v : 0;\n    let tmp = {\n      ...userAmount,\n    };\n    tmp[user.get('objectId')] = v;\n    setUserAmount(tmp);\n  }\n\n  function getTableColumns() {\n    let ret = [\n      { title: '场次', key: 'roundNO', dataIndex: 'roundNO', ellipsis: true },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: () => {\n          console.log('dateTime::', dateTime);\n          return (\n            <div style={{ width: '150px' }}>\n              <DatePicker\n                onChange={handleDateTimeChange}\n                format=\"YYYY/MM/DD\"\n                value={\n                  (dateTime && moment(dateTime, 'YYYY/MM/DD')) || undefined\n                }\n              />\n            </div>\n          );\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: () => {\n          return (\n            <InputNumber onChange={handleLeverageChange} value={leverage} />\n          );\n        },\n      },\n    ];\n    return ret.concat(\n      context.users.map((user: AV.Object) => {\n        return {\n          title: user.get('name'),\n          key: user.get('objectId'),\n          ellipsis: true,\n          render: () => {\n            return (\n              <InputNumber\n                onChange={(v) => handleAmountChange(v, user)}\n                value={userAmount[user.get('objectId')]}\n              />\n            );\n          },\n        };\n      })\n    );\n  }\n\n  function handleCancel() {\n    // setList([{ roundNO: 1 }]);\n    // setDateTime('');\n    // setLeverage(0.1);\n    // setUserAmount({});\n    onCancel();\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={handleCancel}\n      onOk={handleOk}\n      width={1200}\n    >\n      <div className=\"add-round-wrap\">\n        <Table\n          dataSource={list}\n          columns={getTableColumns()}\n          pagination={false}\n          scroll={{ x: true }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Modal, Table } from 'antd';\nimport AppContext from '../../store/context';\nimport AV from 'leancloud-storage';\n\ninterface Props {\n  onModify: OnModifyFunc;\n  visible: boolean;\n  onOk: EmptyFunc;\n  onCancel: EmptyFunc;\n}\n\ninterface OnModifyFunc {\n  (index: number): void;\n}\n\ninterface EmptyFunc {\n  (): void;\n}\n\nexport default function DetailsModal({\n  visible,\n  onModify,\n  onOk,\n  onCancel,\n}: Props) {\n  const context = useContext(AppContext);\n\n  function getTableColumns() {\n    let ret: object[] = [\n      {\n        title: '场次',\n        key: 'roundNO',\n        ellipsis: true,\n        render: (text: string, record: AV.Object, index: number) => {\n          return index + 1;\n        },\n      },\n      {\n        title: '日期',\n        key: 'dateTime',\n        ellipsis: true,\n        render: (text: string, record: AV.Object) => {\n          return record.get('dateTime');\n        },\n      },\n      {\n        title: '杠杆比例',\n        key: 'leverage',\n        ellipsis: true,\n        render: (text: string, record: AV.Object) => {\n          return record.get('leverage');\n        },\n      },\n    ];\n    let users: AV.Object[] = context.users;\n    ret = ret.concat(\n      users.map((user: AV.Object) => {\n        return {\n          title: user.get('name'),\n          key: user.get('objectId'),\n          ellipsis: true,\n          render: (text: string, record: AV.Object, index: number) => {\n            return getUserRoundInfo(user.get('objectId'), index);\n          },\n        };\n      })\n    );\n    const currentUser = AV.User.current();\n    if (currentUser) {\n      ret = ret.concat({\n        title: '操作',\n        key: 'opt',\n        render: (text: string, record: AV.Object, index: number) => {\n          return (\n            <div className=\"details-opt\">\n              <span onClick={() => handleModifyClick(index)}>修改</span>\n            </div>\n          );\n        },\n      });\n    }\n    return ret;\n  }\n\n  function handleModifyClick(index: number) {\n    onModify(index);\n  }\n\n  function getUserRoundInfo(userId: string, index: number) {\n    let { roundUserInfo } = context;\n    let list: AV.Object[] = roundUserInfo[index];\n    if (list) {\n      let info = list.find((item: AV.Object) => {\n        return item.get('player').get('objectId') === userId;\n      });\n      return (info && info.get('amount')) || '';\n    }\n    return '';\n  }\n\n  let rounds: AV.Object[] = context.rounds;\n  return (\n    <Modal visible={visible} onCancel={onCancel} onOk={onOk} width={1200}>\n      <div className=\"details-round-wrap\">\n        <Table\n          dataSource={rounds}\n          columns={getTableColumns()}\n          pagination={false}\n          scroll={{ x: true }}\n        />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport List from '../components/List';\nimport AddRoundModal from '../components/AddRoundModal';\nimport DetailsModal from '../components/DetailsModal';\nimport AV from 'leancloud-storage';\n\ninterface AddDoneFunc {\n  (): void;\n}\n\ninterface Props {\n  onAddDone: AddDoneFunc;\n  list: [];\n}\n\nexport default function Home({ onAddDone, list }: Props) {\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [isModify, setIsModify] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [modifyIndex, setModifyIndex] = useState(-1);\n\n  const currentUser = AV.User.current();\n  return (\n    <div className=\"page home\">\n      <List list={list} />\n      <div className=\"btn-wrap\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setIsModify(false);\n            setShowDetailsModal(true);\n          }}\n        >\n          明细\n        </Button>\n        {currentUser ? (\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setShowAddModal(true);\n            }}\n          >\n            增加记录\n          </Button>\n        ) : null}\n      </div>\n      <AddRoundModal\n        visible={showAddModal}\n        onOk={() => {\n          setShowAddModal(false);\n          onAddDone();\n        }}\n        onCancel={() => {\n          setShowAddModal(false);\n        }}\n        isModify={isModify}\n        roundIndex={modifyIndex}\n      ></AddRoundModal>\n      <DetailsModal\n        visible={showDetailsModal}\n        onOk={() => {\n          setShowDetailsModal(false);\n        }}\n        onCancel={() => {\n          setShowDetailsModal(false);\n        }}\n        onModify={(index) => {\n          setModifyIndex(index);\n          setIsModify(true);\n          setShowDetailsModal(false);\n          setShowAddModal(true);\n        }}\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""}